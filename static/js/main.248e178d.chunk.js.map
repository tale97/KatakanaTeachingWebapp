{"version":3,"sources":["serviceWorker.js","constants.js","components/Char.js","actions.js","containers/CharList.js","inputChecker.js","jap-char.js","containers/CharInput.js","components/NavBar.js","components/Music.js","components/Hint.js","components/TextBlock.js","components/LoadingPopup.js","components/Signin.js","components/Register.js","components/WordCard.js","components/OutsideAlerter.js","components/Footer.js","components/MessageBar.js","components/SmallChar.js","components/SmallCharList.js","components/KatakanaChar.js","components/KatakanaChart.js","components/LinearDeterminate.js","components/CircularIndeterminate.js","constants/App-constants.js","constants/App-methods.js","containers/App.js","reducers.js","index.js"],"names":["Boolean","window","location","hostname","match","REGISTER_URL","SIGNIN_URL","UPDATECHARSCORE_URL","Char","className","this","props","cardState","wordCompleted","onClick","onClickCard","char","React","Component","updateChar","japchar","romaji","type","currentJapChar","currentRomaji","updateWord","word","romajiList","cardStateList","map","item","payload","CharList","componentDidMount","setNewWordTime","Date","now","componentDidUpdate","prevProps","JSON","stringify","charsToRead","setCardState","idx","indexCurrentCard","onHintedCard","concat","clickedJapChar","state","dispatchTime","charsArrayDisplay","Grid","key","isLoading","length","container","direction","justify","alignItems","spacing","Skeleton","height","width","variant","animation","style","borderRadius","connect","changeCardState","dispatch","time","TrieNode","parent","children","end","Trie","root","prototype","getWord","output","node","unshift","join","insert","i","contains","find","prefix","findAllWords","arr","child","SpellCheckerBuffer","charAndRomaji","checkFunction","wordNotInDictAlert","dict","buffer","charTrie","Object","values","forEach","element","pendingChars","Array","isArray","katakanaToRomaji","ア","イ","ウ","エ","オ","カ","キ","ク","ケ","コ","サ","シ","ス","セ","ソ","タ","チ","ツ","テ","ト","ナ","ニ","ヌ","ネ","ノ","ハ","ヒ","フ","ヘ","ホ","マ","ミ","ム","メ","モ","ヤ","ユ","ヨ","ラ","リ","ル","レ","ロ","ワ","ヲ","ン","clearBuffer","limitedKatakanaList","katakanaHint","imageLink","shortHint","CharInput","user_uid","fillHintedCharacter","event","onWordCompletion","onInputBoxChange","onEnterPress","setCurrentChar","currentWord","target","value","curRomaji","onCorrectChar","onWrongInput","onCompleteChar","getKeyByValue","updateScoreThenGetModule","thisApp","userInputChar","newRomaji","currentChar","onKeyDown","onIncorrectCard","audioIsPlaying","disableAllAction","walkThroughEnabled","endWalkThrough","which","lastCardState","preventDefault","buttonClickOrSpacePressHandler","deleteIncorrectInput","goToNextWord","String","fromCharCode","toLowerCase","onKeyPress","inputChecker","checkInput","onSpacePress","requestModuleInfo","clearCurrentInput","slice","formRef","createRef","alertRomajiNotInDict","setClick","matchClearFormInputFunction","clearInputBox","curWrongChar","resetRomajiNotInDictAlert","moveToNextWord","requestedWord","firstTimeCompleteWordSinceWalkThrough","Input","placeholder","inputProps","spellCheck","autoFocus","inputRef","onPaste","changeGeneralState","inputBox","changeInputBox","pressKey","context","pressSpace","userChar","userInput","typeWrongAnswer","completionType","pressEnter","forwardRef","useStyles","makeStyles","theme","flexGrow","title","NavBar","classes","onRouteChange","currentTab","useState","open","setOpen","handleClose","AppBar","position","Toolbar","Typography","color","align","Button","startIcon","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","href","DialogActions","Music","play","audio","Audio","audioLink","stopAudioHandler","setState","noStoreUpdateWhenEnded","onAudioPause","simpleStopAudioHandler","togglePlay","onAudioPlay","removeEventListener","addEventListener","pause","bindMethod","setTimeout","autoplay","delay","Hint","audioComponent","currentHintedChar","sentenceFragments","replace","split","Card","onClickHandler","CardActionArea","triggerAudioComponent","autoplayAudio","childMethod","Divider","src","alt","CardContent","paddingTop","paddingBottom","component","TextBlock","description","icon","LoadingPopup","isOpen","CircularProgress","Signin","onEmailInput","signInEmail","emailErrorMsg","onPasswordInput","signInPassword","passwordErrorMsg","sendSigninInfoToBackend","openLoadingPopup","fetch","method","headers","body","email","password","then","response","json","data","keys","loadUser","console","log","catch","error","onSignIn","Paper","paper2","elevation","Container","maxWidth","CssBaseline","paper","form","noValidate","TextField","helperText","margin","fullWidth","label","name","autoComplete","onChange","submit","Link","fontSize","withStyles","fontFamily","backfround","marginTop","display","flexDirection","marginBottom","padding","breakpoints","up","marginLeft","marginRight","Register","onNameInput","nameErrorMsg","sendFormDataToBackEnd","onFormSubmit","validateEmail","nameError","emailError","passwordError","test","minWidth","pos","WordCard","wordInfo","document","createElement","innerHTML","word_meaning","word_pos","includes","meaning","part_of_speech","vocab_meaning","vocab_pos","gutterBottom","OutsideAlerter","handleClickOutside","componentWillUnmount","setWrapperRef","wrapperRef","focusInputBox","ref","Footer","MessageBar","displayHelpMessages","shortid","generate","message","userName","typography","cardBG","background","correctPercent","calcCorrectPercent","correctNum","hintedNum","hintNum","SmallChar","anchorEl","setAnchorEl","undefined","maxHeight","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","SmallCharList","requestGetCharScore","computeCorrectNum","resultList","reduce","acc","computeIncorrectNum","val","charResultList","kana","hintedPercent","incorrectNum","isEncountered","KatakanaChar","KatakanaChart","katakanaArray","kana_filteredResultList","filter","resultType","LinearDeterminate","moduleInfo","totalRepetition","totalRemainingRepetition","totalRep","progressPercent","LinearProgress","CircularIndeterminate","version","listOfPraises","listOfSoftPraises","Introduction","intro","parseJapaneseWord","katakana_word","katakana_char","katakana_romaji","push","score","a","userId","userInfo","res","moduleInfoObject","requestNewWordPromise","Promise","resolve","isFetchingWord","wordRequestTimeStamp","openEndDialogue","err","requestNewCharPromise","requestNewWord","transitionToNextWord","kana_char","charAt","vocab_kana","audio_url","audio_string","vocab_sound_local","on","word_audio_duration","duration","currentWordInfo","currentWord_unix_time","transitionToNextChar","LogRocket","init","App","resetStore","requestAndUpdateWord","prevState","route","firstIntroductionEnabled","USER_TIME_LIMIT_IN_MINUTES","randomIndex","Math","floor","random","user","joined","loadUserToStore","identify","isFetchingCharResult","charInputRef","current","focus","innerText","showHint","checkedAudioAutoPlay","hintCardRef","displayWordInfo","wordCardRef","object","randomItem","aList","displayMessage","romajiNotInDict","wrongCharList","cardStateSet","Set","size","has","setButtonText","displayLoadingPopup","handleAudioAutoplaySwitch","handleEnableMessageSwitch","checkedEnableMessage","onExitIntroduction","clearFormInput","firstTimeCompleteWordSinceWalkThru","renderRoute","initialStep","enabled","steps","introductory_steps","onExit","options","showStepNumbers","hidePrev","hideNext","exitOnOverlayClick","exitOnEsc","showButtons","overlayOpacity","skipLabel","doneLabel","FormControlLabel","labelPlacement","control","Switch","checked","click","clickChild","childFunc","moduleIndex","Box","initialInputBox","keyPressed","initialGeneralState","initialCardState","hintedCharList","prevTimestamp","charTimestamp","allCharTimestamp","createMuiTheme","palette","primary","main","secondary","overrides","MuiButton","iconSizeMedium","rootReducer","combineReducers","action","newTimestamp","logger","createLogger","store","createStore","applyMiddleware","reduxMiddleware","ReactDOM","render","ThemeProvider","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.248e178d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const USER_INPUT = \"USER_INPUT\";\r\n\r\nconst method = \"tuanHeroku\";\r\n\r\n// global configs\r\nvar VERSION = 1; // 1 for word-base ver, 2 for char-base ver\r\n\r\nvar PRIMARYCOLOR = \"#1cb0f6\";\r\n\r\nvar USER_TIME_LIMIT_IN_MINUTES = 20;\r\nvar REGISTER_URL = \"https://localhost:3000/register\";\r\nvar SIGNIN_URL = \"https://localhost:3000/signin\";\r\nvar PROFILE_URL = \"https://localhost:3000/profile/\";\r\nvar GETWORD_URL = \"https://shrouded-harbor-11572.herokuapp.com/getnextword\";\r\nvar GETCHAR_URL = \"https://shrouded-harbor-11572.herokuapp.com/getnextchar\";\r\nvar CHARSCORE_URL = \"https://shrouded-harbor-11572.herokuapp.com/charscore\";\r\nvar UPDATECHARSCORE_URL =\r\n  \"https://shrouded-harbor-11572.herokuapp.com/updatecharscore\";\r\nvar WORDSCORE_URL = \"https://shrouded-harbor-11572.herokuapp.com/wordscore\";\r\nvar GETCHARSCORE_URL =\r\n  \"https://shrouded-harbor-11572.herokuapp.com/getcharscore\";\r\nvar GETMODULEINFO_URL =\r\n  \"https://shrouded-harbor-11572.herokuapp.com/getmoduleinfo\";\r\nvar MEDIA_BASE_URL_SENTENCE =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/sentence-sound/\";\r\nvar MEDIA_BASE_URL_WORD =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/word-sound/\";\r\n// source: https://www.learn-japanese-adventure.com/learn-how-to-speak-japanese.html\r\nvar MEDIA_BASE_URL_CHAR =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/character-sound/kanasound-\"; // add {romaji}.mp3\r\nvar WORD_LINK =\r\n  \"https://www.reddit.com/r/LearnJapanese/comments/s2iop/heres_a_spreadsheet_of_the_6000_most_common/c4ak0xd/\";\r\nvar TOFUGU_LINK = \"https://www.tofugu.com/japanese/learn-katakana/\";\r\nvar MARSHALSITE_LINK = \"https://marshallyin.com/katakana-list/\";\r\n\r\nswitch (method) {\r\n  case \"local\":\r\n    break;\r\n  case \"tuanHeroku\":\r\n    REGISTER_URL = \"https://shrouded-harbor-11572.herokuapp.com/register\";\r\n    SIGNIN_URL = \"https://shrouded-harbor-11572.herokuapp.com/signin\";\r\n    PROFILE_URL = \"https://shrouded-harbor-11572.herokuapp.com/profile/\";\r\n    break;\r\n  case \"lienHeroku\":\r\n    REGISTER_URL = \"https://peaceful-sands-25473.herokuapp.com/register\";\r\n    SIGNIN_URL = \"https://peaceful-sands-25473.herokuapp.com/signin\";\r\n    PROFILE_URL = \"https://peaceful-sands-25473.herokuapp.com/profile/\";\r\n    break;\r\n  default:\r\n    console.log(\"method should be either tuanHeroku, lienHeroku, or local\");\r\n    break;\r\n}\r\n\r\nexport {\r\n  REGISTER_URL,\r\n  SIGNIN_URL,\r\n  PROFILE_URL,\r\n  GETWORD_URL,\r\n  MEDIA_BASE_URL_SENTENCE,\r\n  MEDIA_BASE_URL_WORD,\r\n  MEDIA_BASE_URL_CHAR,\r\n  CHARSCORE_URL,\r\n  WORDSCORE_URL,\r\n  WORD_LINK,\r\n  TOFUGU_LINK,\r\n  GETCHARSCORE_URL,\r\n  UPDATECHARSCORE_URL,\r\n  USER_TIME_LIMIT_IN_MINUTES,\r\n  PRIMARYCOLOR,\r\n  GETMODULEINFO_URL,\r\n  MARSHALSITE_LINK,\r\n  GETCHAR_URL,\r\n  VERSION,\r\n};\r\n","import React from \"react\";\nimport \"../scss/containers/App.scss\";\nimport \"../scss/components/Char.scss\";\nimport { VERSION } from \"../constants\";\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nclass Char extends React.Component {\n  render() {\n    const className = `card${VERSION === 2 ? `2` : ``} \n      ${this.props.cardState} ${\n      this.props.wordCompleted ? \"card-button\" : \"\"\n    }`;\n    return (\n      <div className={className} onClick={this.props.onClickCard}>\n        <h1 className=\"char\">{this.props.char}</h1>\n      </div>\n    );\n  }\n}\n\nexport default Char;\n","import { USER_INPUT } from \"./constants.js\";\r\n\r\nexport const typeAnswer = (text) => {\r\n  return {\r\n    type: USER_INPUT,\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const pressSpace = (context) => {\r\n  switch (context) {\r\n    case \"REQUEST_HINT\":\r\n      return {\r\n        type: \"SPACE_PRESS_FOR_HINT\",\r\n        time: Date.now(),\r\n      };\r\n    case \"CONTINUE_AFTER_ERROR\":\r\n      return {\r\n        type: \"SPACE_PRESS_TO_CONTINUE\",\r\n        time: Date.now(),\r\n      };\r\n    case \"CONTINUE_AFTER_COMPLETE\":\r\n      return {\r\n        type: \"SPACE_PRESS_TO_GO_NEXT\",\r\n        time: Date.now(),\r\n      };\r\n    default:\r\n      return {\r\n        type: \"SPACE_PRESS\",\r\n      };\r\n  }\r\n};\r\n\r\nexport const updateChar = (japchar, romaji) => {\r\n  return {\r\n    type: \"CHAR_UPDATE\",\r\n    currentJapChar: japchar,\r\n    currentRomaji: romaji,\r\n  };\r\n};\r\n\r\nexport const pressEnter = (time) => {\r\n  return {\r\n    type: \"ENTER_PRESS\",\r\n    time: time,\r\n  };\r\n};\r\n\r\nexport const typeWrongAnswer = (userChar, currentChar) => {\r\n  return {\r\n    type: \"WRONG_INPUT\",\r\n    userInput: userChar,\r\n    currentChar: currentChar,\r\n    time: Date.now(),\r\n  };\r\n};\r\n\r\nexport const completeWord = () => {\r\n  return {\r\n    type: \"COMPLETE_WORD\",\r\n    time: Date.now(), // when user complete last character Card\r\n  };\r\n};\r\n\r\nexport const updateWord = (word, romajiList) => {\r\n  const cardStateList = romajiList.map((item) => \"\");\r\n  return {\r\n    type: \"UPDATE_WORD\",\r\n    payload: word,\r\n    romajiList: romajiList,\r\n    cardStateList: cardStateList,\r\n  };\r\n};\r\n\r\nexport const completeChar = (timestamp, completionType) => {\r\n  return {\r\n    type: \"COMPLETE_CHAR\",\r\n    time: timestamp,\r\n    completionType: completionType,\r\n  };\r\n};\r\n\r\nexport const setNewWordTime = (time) => {\r\n  return {\r\n    type: \"SET_NEW_WORD_TIME\",\r\n    time: time,\r\n  };\r\n};\r\n\r\nexport const onAudioPlay = () => {\r\n  return {\r\n    type: \"PLAY_AUDIO\",\r\n  };\r\n};\r\n\r\nexport const onAudioPause = () => {\r\n  return {\r\n    type: \"PAUSE_AUDIO\",\r\n  };\r\n};\r\n\r\nexport const pressKey = (key) => {\r\n  return {\r\n    type: \"PRESS_KEY\",\r\n    payload: key,\r\n  };\r\n};\r\n\r\nexport const onCorrectChar = () => {\r\n  return {\r\n    type: \"INPUT_CORRECT_CHAR\",\r\n  };\r\n};\r\n\r\nexport const onIncorrectChar = () => {\r\n  return {\r\n    type: \"INPUT_INCORRECT_CHAR\",\r\n  };\r\n};\r\n\r\nexport const resetStore = () => {\r\n  return {\r\n    type: \"RESET_STORE\",\r\n  };\r\n};\r\n\r\nexport const alertRomajiNotInDict = () => {\r\n  return {\r\n    type: \"ALERT_NOT_IN_DICT\",\r\n  };\r\n};\r\n\r\nexport const resetRomajiNotInDictAlert = () => {\r\n  return {\r\n    type: \"RESET_NOT_IN_DICT_ALERT\",\r\n  };\r\n};\r\n\r\nexport const loadUserToStore = (userInfo) => {\r\n  return {\r\n    type: \"LOAD_USER\",\r\n    payload: userInfo,\r\n  }\r\n}\r\n","import React from \"react\";\nimport Char from \"../components/Char.js\";\nimport { Grid } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { setNewWordTime } from \"../actions\";\nimport \"../scss/components/Char.scss\";\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nconst mapStateToProps = (state) => {\n  return {\n    indexCurrentCard: state.changeCardState.indexCurrentCard,\n    cardStateList: state.changeCardState.cardStateList,\n    onHintedCard: state.changeCardState.onHintedCard,\n    wordCompleted: state.changeCardState.wordCompleted,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setNewWordTime: (time) => {\n      dispatch(setNewWordTime(time));\n    },\n  };\n};\n\nclass CharList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dispatchTime: 0,\n    };\n  }\n\n  componentDidMount = () => {\n    this.props.setNewWordTime(Date.now());\n  };\n\n  componentDidUpdate = (prevProps) => {\n    if (\n      JSON.stringify(this.props.charsToRead) !==\n      JSON.stringify(prevProps.charsToRead)\n    ) {\n      this.props.setNewWordTime(Date.now());\n    }\n  };\n\n  setCardState = (idx, char) => {\n    const {\n      indexCurrentCard,\n      cardStateList,\n      onHintedCard,\n      wordCompleted,\n    } = this.props;\n    var className = \"\";\n\n    if (wordCompleted) {\n      className = className.concat(` completed `);\n    }\n\n    if (wordCompleted && this.props.clickedJapChar !== \"\") {\n      if (char === this.props.clickedJapChar) {\n        className = className.concat(` clicked `);\n      } else {\n        className = className.concat(` o-100 `); // default o-100\n      }\n    }\n    if (idx === indexCurrentCard) {\n      className = className.concat(onHintedCard ? ` current-hinted ` : ` highlighted `);\n    } else {\n      className = className.concat(\n        onHintedCard ? ` o-30 ` : wordCompleted ? \"\" : ` o-60 `\n      );\n    }\n    var cardState = cardStateList[idx];\n    className = className.concat(` ${cardState} `);\n    return className;\n  };\n\n  render() {\n    const charsArrayDisplay = this.props.charsToRead.map((item, idx) => {\n      return (\n        <Grid item key={idx}>\n          <Char\n            char={item.char}\n            key={idx}\n            cardState={this.setCardState(idx, item.char)}\n            onClickCard={this.props.onClickCard}\n            wordCompleted={this.props.wordCompleted}\n            isLoading={this.props.charsToRead.length === 0}\n          />\n        </Grid>\n      );\n    });\n\n    return (\n      charsArrayDisplay.length > 0 ? (\n        <Grid\n          container\n          className=\"japanese-word\"\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing=\"0\"\n        >\n          {charsArrayDisplay}\n        </Grid>\n      ) : (\n        <Grid\n          container\n          className=\"word-skeleton\"\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing=\"0\"\n        >\n          <Skeleton \n            className=\"word-skeleton\"\n            height={\"calc(50px + 4vh)\"}\n            width={\"calc(170px + 15vh + 2vh)\"}\n            variant=\"text\"\n            animation=\"wave\"\n            style={{ \n              borderRadius: \"calc(0px + 0.7vh)\",\n            }}\n          />\n        </Grid>\n      )\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CharList);\n","// Trie.js - super simple JS implementation\r\n// https://en.wikipedia.org/wiki/Trie\r\n// https://gist.github.com/tpae/72e1c54471e88b689f85ad2b3940a8f0\r\n\r\n// -----------------------------------------\r\n\r\n// we start with the TrieNode\r\nfunction TrieNode(key) {\r\n  // the \"key\" value will be the character in sequence\r\n  this.key = key;\r\n\r\n  // we keep a reference to parent\r\n  this.parent = null;\r\n\r\n  // we have hash of children\r\n  this.children = {};\r\n\r\n  // check to see if the node is at the end\r\n  this.end = false;\r\n}\r\n\r\n// iterates through the parents to get the word.\r\n// time complexity: O(k), k = word length\r\nTrieNode.prototype.getWord = function () {\r\n  var output = [];\r\n  var node = this;\r\n\r\n  while (node !== null) {\r\n    output.unshift(node.key);\r\n    node = node.parent;\r\n  }\r\n\r\n  return output.join(\"\");\r\n};\r\n\r\n// -----------------------------------------\r\n\r\n// we implement Trie with just a simple root with null value.\r\nfunction Trie() {\r\n  this.root = new TrieNode(null);\r\n}\r\n\r\n// inserts a word into the trie.\r\n// time complexity: O(k), k = word length\r\nTrie.prototype.insert = function (word) {\r\n  var node = this.root; // we start at the root\r\n\r\n  // for every character in the word\r\n  for (var i = 0; i < word.length; i++) {\r\n    // check to see if character node exists in children.\r\n    if (!node.children[word[i]]) {\r\n      // if it doesn't exist, we then create it.\r\n      node.children[word[i]] = new TrieNode(word[i]);\r\n\r\n      // we also assign the parent to the child node.\r\n      node.children[word[i]].parent = node;\r\n    }\r\n\r\n    // proceed to the next depth in the trie.\r\n    node = node.children[word[i]];\r\n\r\n    // finally, we check to see if it's the last word.\r\n    if (i === word.length - 1) {\r\n      // if it is, we set the end flag to true.\r\n      node.end = true;\r\n    }\r\n  }\r\n};\r\n\r\n// check if it contains a whole word.\r\n// time complexity: O(k), k = word length\r\nTrie.prototype.contains = function (word) {\r\n  var node = this.root;\r\n\r\n  // for every character in the word\r\n  for (var i = 0; i < word.length; i++) {\r\n    // check to see if character node exists in children.\r\n    if (node.children[word[i]]) {\r\n      // if it exists, proceed to the next depth of the trie.\r\n      node = node.children[word[i]];\r\n    } else {\r\n      // doesn't exist, return false since it's not a valid word.\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // we finished going through all the words, but is it a whole word?\r\n  return node.end;\r\n};\r\n\r\n// returns every word with given prefix\r\n// time complexity: O(p + n), p = prefix length, n = number of child paths\r\nTrie.prototype.find = function (prefix) {\r\n  var node = this.root;\r\n  var output = [];\r\n\r\n  // for every character in the prefix\r\n  for (var i = 0; i < prefix.length; i++) {\r\n    // make sure prefix actually has words\r\n    if (node.children[prefix[i]]) {\r\n      node = node.children[prefix[i]];\r\n    } else {\r\n      // there's none. just return it.\r\n      return output;\r\n    }\r\n  }\r\n\r\n  // recursively find all words in the node\r\n  findAllWords(node, output);\r\n\r\n  return output;\r\n};\r\n\r\n// recursive function to find all words in the given node.\r\nfunction findAllWords(node, arr) {\r\n  // base case, if node is at a word, push to output\r\n  if (node.end) {\r\n    arr.unshift(node.getWord());\r\n  }\r\n\r\n  // iterate through each children, call recursive findAllWords\r\n  for (var child in node.children) {\r\n    findAllWords(node.children[child], arr);\r\n  }\r\n}\r\n\r\n// -----------------------------------------\r\n\r\n// instantiate our trie\r\n//   var trie = new Trie();\r\n\r\n//   // insert few values\r\n//   trie.insert(\"hello\");\r\n//   trie.insert(\"helium\");\r\n\r\n// check contains method\r\n//console.log(trie.contains(\"helium\"));  // true\r\n//console.log(trie.contains(\"kickass\")); // false\r\n\r\n// check find method\r\n//console.log(trie.find(\"hel\"));  // [ 'helium', 'hello' ]\r\n//console.log(trie.find(\"hell\")); // [ 'hello' ]\r\n\r\nclass SpellCheckerBuffer {\r\n  constructor(charAndRomaji, checkFunction, wordNotInDictAlert) {\r\n    this.dict = charAndRomaji;\r\n    this.checkFunction = checkFunction;\r\n    this.buffer = \"\";\r\n    this.charTrie = new Trie();\r\n    this.wordNotInDictAlert = wordNotInDictAlert;\r\n    Object.values(this.dict).forEach((element) => {\r\n      this.charTrie.insert(element);\r\n    });\r\n    //console.log(this.charTrie.find(\"\"));\r\n  }\r\n  checkInput(char) {\r\n    if (char === \"clearBuffer\") {\r\n      this.buffer = \"\";\r\n      return;\r\n    }\r\n    this.buffer += char;\r\n    if (this.charTrie.contains(this.buffer)) {\r\n      this.checkFunction(this.buffer);\r\n      this.buffer = \"\";\r\n    } else {\r\n      var pendingChars = this.charTrie.find(this.buffer);\r\n      if (!Array.isArray(pendingChars) || !pendingChars.length) {\r\n        this.wordNotInDictAlert();\r\n        this.checkFunction(this.buffer);\r\n        this.buffer = \"\";\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// uncomment below to test\r\n// const sp = new SpellCheckerBuffer(katakanaToRomaji, console.log);\r\n// sp.checkInput(\"n\");\r\n// sp.checkInput(\"i\");\r\n// sp.checkInput(\"n\");\r\n// sp.checkInput(\"a\");\r\n// sp.checkInput(\"t\");\r\n// sp.checkInput(\"s\");\r\n// sp.checkInput(\"u\");\r\n\r\nexport default SpellCheckerBuffer;\r\n","const katakanaToRomaji = {\r\n  ア: \"a\",\r\n  イ: \"i\",\r\n  ウ: \"u\",\r\n  エ: \"e\",\r\n  オ: \"o\",\r\n  カ: \"ka\",\r\n  キ: \"ki\",\r\n  ク: \"ku\",\r\n  ケ: \"ke\",\r\n  コ: \"ko\",\r\n  サ: \"sa\",\r\n  シ: \"shi\",\r\n  ス: \"su\",\r\n  セ: \"se\",\r\n  ソ: \"so\",\r\n  タ: \"ta\",\r\n  チ: \"chi\",\r\n  ツ: \"tsu\",\r\n  テ: \"te\",\r\n  ト: \"to\",\r\n  ナ: \"na\",\r\n  ニ: \"ni\",\r\n  ヌ: \"nu\",\r\n  ネ: \"ne\",\r\n  ノ: \"no\",\r\n  ハ: \"ha\",\r\n  ヒ: \"hi\",\r\n  フ: \"fu\",\r\n  ヘ: \"he\",\r\n  ホ: \"ho\",\r\n  マ: \"ma\",\r\n  ミ: \"mi\",\r\n  ム: \"mu\",\r\n  メ: \"me\",\r\n  モ: \"mo\",\r\n  ヤ: \"ya\",\r\n  ユ: \"yu\",\r\n  ヨ: \"yo\",\r\n  ラ: \"ra\",\r\n  リ: \"ri\",\r\n  ル: \"ru\",\r\n  レ: \"re\",\r\n  ロ: \"ro\",\r\n  ワ: \"wa\",\r\n  ヲ: \"wo\",\r\n  ン: \"n'\",\r\n  clearBuffer: \"clearBuffer\",\r\n};\r\n\r\nconst limitedKatakanaList = [\r\n  \"ア\",\r\n  \"イ\",\r\n  \"ウ\",\r\n  \"エ\",\r\n  \"オ\",\r\n  \"カ\",\r\n  \"キ\",\r\n  \"ク\",\r\n  \"ケ\",\r\n  \"コ\",\r\n  \"シ\",\r\n  \"ス\",\r\n  \"ソ\",\r\n  \"タ\",\r\n  \"テ\",\r\n  \"ト\",\r\n  \"ナ\",\r\n  \"ニ\",\r\n  \"ネ\",\r\n  \"ハ\",\r\n  \"フ\",\r\n  \"ホ\",\r\n  \"マ\",\r\n  \"ミ\",\r\n  \"ム\",\r\n  \"メ\",\r\n  \"モ\",\r\n  \"ヤ\",\r\n  \"ラ\",\r\n  \"リ\",\r\n  \"ル\",\r\n  \"レ\",\r\n  'ロ', 'ツ', 'ノ', 'ヘ', 'ユ', 'ヒ', 'セ', 'ヌ', 'チ', 'ヨ', 'サ', 'ワ', 'ヲ'\r\n];\r\n\r\nconst katakanaHint = {\r\n  ア: {\r\n    romaji: \"a\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A2.jpg\",\r\n    shortHint: \"Find the capital 'A'\",\r\n  },\r\n  イ: {\r\n    romaji: \"i\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A4.jpg\",\r\n    shortHint: \"It looks like an <u>ea</u>gle (i)\",\r\n  },\r\n  ウ: {\r\n    romaji: \"u\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A6.jpg\",\r\n    shortHint: \"ウ looks like う (u)\",\r\n  },\r\n  エ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A8.jpg\",\r\n    shortHint:\r\n      \"Imagine this is the girders an <u>e</u>ngineer would use to build buildings\",\r\n  },\r\n  オ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AA.jpg\",\r\n    shortHint:\r\n      'A dude flapping open his trench coat to flash you. \"<u>Oh</u> MY GOD!\" you say. ',\r\n  },\r\n  カ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AB.jpg\",\r\n    shortHint: \"It looks just like the Hiragana か\",\r\n  },\r\n  キ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AD.jpg\",\r\n    shortHint: \"A key (ki)\",\r\n  },\r\n  ク: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AF.jpg\",\r\n    shortHint: \"A long <u>coo</u>ks's (ku) hat\",\r\n  },\r\n  ケ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B1.jpg\",\r\n    shortHint: \"It looks like the letter <u>K</u> (ke)\",\r\n  },\r\n  コ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B3.jpg\",\r\n    shortHint: \"Two 90 degrees <u>co</u>rners (ko)\",\r\n  },\r\n  サ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B5.jpg\",\r\n    shortHint: \"Three <u>sa</u>rdines stacked on top of each other\",\r\n  },\r\n  シ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B7.jpg\",\r\n    shortHint: \"<u>She</u> has a very werid face (shi)\",\r\n  },\r\n  ス: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B9.jpg\",\r\n    shortHint: \"A hanger where you hang up your fancy <u>su</u>it (su)\",\r\n  },\r\n  セ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BB.jpg\",\r\n    shortHint: \"It looks like the Hiragana せ\",\r\n  },\r\n  ソ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BD.jpg\",\r\n    shortHint: \"One needle and a long thread which you use to <u>sew</u> (so)\",\r\n  },\r\n  タ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BF.jpg\",\r\n    shortHint: \"A <u>ti</u>dal wave racing across the sea (ta)\",\r\n  },\r\n  チ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%81.jpg\",\r\n    shortHint: \"A <u>chee</u>rleader doing a <u>chee</u>r (chi)\",\r\n  },\r\n  ツ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%84.jpg\",\r\n    shortHint: \"<u>Two</u> (tsu) needles\",\r\n  },\r\n  テ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%86.jpg\",\r\n    shortHint: \"A <u>te</u>lephone pole\",\r\n  },\r\n  ト: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%88.jpg\",\r\n    shortHint: \"A <u>to</u>tem pole\",\r\n  },\r\n  ナ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8A.jpg\",\r\n    shortHint: \"A majestic <u>na</u>rwhal\",\r\n  },\r\n  ニ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8B.jpg\",\r\n    shortHint: \"Two <u>nee</u>dles (ni) laying on their side\",\r\n  },\r\n  ヌ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8C.jpg\",\r\n    shortHint:\r\n      \"The chopsticks are grabbing onto some <u>noo</u>dles & pulling them out of a bowl. (nu)\",\r\n  },\r\n  ネ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8D.jpg\",\r\n    shortHint: \"A <u>ne</u>cromancer has summoned this zombie\",\r\n  },\r\n  ノ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8E.jpg\",\r\n    shortHint: \"A really long <u>no</u>se\",\r\n  },\r\n  ハ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8F.jpg\",\r\n    shortHint: \"A rice paddy <u>ha</u>t\",\r\n  },\r\n  ヒ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%92.jpg\",\r\n    shortHint: \"<u>He</u> (hi) has no head. <u>He</u> is reaching out to you.\",\r\n  },\r\n  フ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%95.jpg\",\r\n    shortHint: \"A <u>fu</u>nny looking owl\",\r\n  },\r\n  ヘ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%98.jpg\",\r\n    shortHint: \"This looks like the Hiragana へ\",\r\n  },\r\n  ホ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9B.jpg\",\r\n    shortHint: \"A <u>ho</u>ly cross\",\r\n  },\r\n  マ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9E.jpg\",\r\n    shortHint: \"Look at all those angles! Those lengths! All that <u>ma</u>th!\",\r\n  },\r\n  ミ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9F.jpg\",\r\n    shortHint: \"Three <u>mi</u>ssiles, flying towards you. Be careful!\",\r\n  },\r\n  ム: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A0.jpg\",\r\n    shortHint: \"It is shaped like a pile of poop. Cow poop. <u>Moo</u>. (mu)\",\r\n  },\r\n  メ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A1.jpg\",\r\n    shortHint: 'め <u>Me</u> is Japnese for \"eye\"',\r\n  },\r\n  モ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A2.jpg\",\r\n    shortHint: \"This looks like the Hiragana も\",\r\n  },\r\n  ヤ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A4.jpg\",\r\n    shortHint: \"This looks just like the Hiragana や\",\r\n  },\r\n  ユ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A6.jpg\",\r\n    shortHint: \"You (yu) have a hook for a hand\",\r\n  },\r\n  ヨ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A8.jpg\",\r\n    shortHint: \"A <u>yo</u>gurt containers\",\r\n  },\r\n  ラ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A9.jpg\",\r\n    shortHint: \"It is a <u>ra</u>ptor wearing sweet ray-ban\",\r\n  },\r\n  リ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AA.jpg\",\r\n    shortHint: \"It looks like the Hiragana り\",\r\n  },\r\n  ル: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AB.jpg\",\r\n    shortHint:\r\n      \"There are two <u>rou</u>tes (ru) you can take. Route 1 & Route 2.\",\r\n  },\r\n  レ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AC.jpg\",\r\n    shortHint: \"Look at that beautiful <u>re</u>d hair that <u>Re</u>i has!\",\r\n  },\r\n  ロ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AD.jpg\",\r\n    shortHint:\r\n      \"This <u>ro</u>ad goes around in a square, never ending. What a terrible <u>ro</u>ad this is.\",\r\n  },\r\n  ワ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AF.jpg\",\r\n    shortHint:\r\n      \"You often begin your question with the word <u>wha</u>t (wa). <u>Wha</u>t are you doing?\",\r\n  },\r\n  ヲ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%B2.jpg\",\r\n    shortHint: \"A dog <u>wo</u>ofing (wo) so hard its tongue is flying out\",\r\n  },\r\n  ン: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%B3.jpg\",\r\n    shortHint: \"This guy only has one eye. <u>N</u>oooo!\",\r\n  },\r\n};\r\n\r\nexport { katakanaToRomaji, katakanaHint, limitedKatakanaList };\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../scss/containers/App.scss\";\nimport { Input } from \"@material-ui/core\";\nimport SpellCheckerBuffer from \"../inputChecker\";\nimport { katakanaToRomaji } from \"../jap-char\";\nimport {\n  pressKey,\n  onCorrectChar,\n  typeAnswer,\n  pressSpace,\n  typeWrongAnswer,\n  completeChar,\n  pressEnter,\n  updateChar,\n  updateWord,\n  completeWord,\n  alertRomajiNotInDict,\n  resetRomajiNotInDictAlert,\n} from \"../actions\";\n\nconst mapStatestoProps = (state) => {\n  return {\n    indexCurrentCard: state.changeCardState.indexCurrentCard,\n    romajiList: state.changeCardState.romajiList,\n    cardStateList: state.changeCardState.cardStateList,\n    curWrongChar: state.changeCardState.curWrongChar,\n    onIncorrectCard: state.changeCardState.onIncorrectCard,\n    wordCompleted: state.changeCardState.wordCompleted,\n    onHintedCard: state.changeCardState.onHintedCard,\n    currentRomaji: state.changeCardState.currentRomaji,\n    currentWord: state.changeCardState.currentWord,\n    audioIsPlaying: state.changeGeneralState.audioIsPlaying,\n    inputBox: state.changeInputBox.inputBox,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onInputBoxChange: (value) => {\n      dispatch(typeAnswer(value));\n    },\n    onKeyPress: (key) => {\n      dispatch(pressKey(key));\n    },\n    onCorrectChar: () => {\n      dispatch(onCorrectChar());\n    },\n    onSpacePress: (context) => {\n      dispatch(pressSpace(context));\n    },\n    onWrongInput: (userChar, currentChar) => {\n      dispatch(typeWrongAnswer(userChar, currentChar));\n    },\n    onCompleteChar: (time, type) => {\n      dispatch(completeChar(time, type));\n    },\n    onEnterPress: (time) => {\n      dispatch(pressEnter(time));\n    },\n    setCurrentChar: (japchar, romaji) => {\n      dispatch(updateChar(japchar, romaji));\n    },\n    updateWord: (word, romajiList) => {\n      dispatch(updateWord(word, romajiList));\n    },\n    onWordCompletion: () => {\n      dispatch(completeWord());\n    },\n    alertRomajiNotInDict: () => {\n      dispatch(alertRomajiNotInDict());\n    },\n    resetRomajiNotInDictAlert: () => {\n      dispatch(resetRomajiNotInDictAlert());\n    },\n  };\n};\n\nclass CharInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formRef = React.createRef();\n    this.inputChecker = new SpellCheckerBuffer(\n      katakanaToRomaji,\n      this.checkFunction,\n      this.props.alertRomajiNotInDict\n    );\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentChar,\n      romajiList,\n      indexCurrentCard,\n      currentWord,\n    } = this.props;\n\n    const curRomaji = romajiList[indexCurrentCard];\n    const curKana = currentWord[indexCurrentCard];\n    setCurrentChar(curKana, curRomaji);\n\n    // https://stackoverflow.com/questions/37949981/call-child-method-from-parent\n    this.props.setClick(this.buttonClickOrSpacePressHandler);\n    this.props.matchClearFormInputFunction(this.clearInputBox);\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.user_uid === prevProps.user_uid) {\n    }\n  };\n\n  fillHintedCharacter = (event) => {\n    const {\n      onHintedCard,\n      indexCurrentCard,\n      romajiList,\n      onWordCompletion,\n      currentRomaji,\n      onInputBoxChange,\n      onEnterPress,\n      setCurrentChar,\n      currentWord,\n    } = this.props;\n\n    if (onHintedCard) {\n      if (indexCurrentCard === romajiList.length - 1) {\n        onWordCompletion();\n      }\n      // autofill correct answer\n      event.target.value = event.target.value.concat(currentRomaji);\n      onInputBoxChange(event.target.value);\n      onEnterPress(Date.now());\n\n      const curRomaji = romajiList[indexCurrentCard + 1];\n      const curKana = currentWord[indexCurrentCard + 1];\n      setCurrentChar(curKana, curRomaji);\n    }\n  }\n\n  checkFunction = (char) => {\n    const {\n      romajiList,\n      indexCurrentCard,\n      onCorrectChar,\n      onWrongInput,\n      onWordCompletion,\n      currentWord,\n      setCurrentChar,\n      onCompleteChar,\n      getKeyByValue,\n      user_uid,\n      onHintedCard,\n      onEnterPress,\n      updateScoreThenGetModule,\n      thisApp,\n    } = this.props;\n    const userInputChar = getKeyByValue(katakanaToRomaji, char);\n\n    if (char === romajiList[indexCurrentCard] && !onHintedCard) {  \n      updateScoreThenGetModule(thisApp, user_uid, userInputChar, \"+1\")\n      onCorrectChar();\n      onCompleteChar(Date.now(), \"correct\");\n      const newRomaji = romajiList[indexCurrentCard + 1];\n      const newKana = currentWord[indexCurrentCard + 1];\n      setCurrentChar(newKana, newRomaji); \n      if (indexCurrentCard === romajiList.length - 1) {\n        onWordCompletion();\n      }\n    } else if (char === romajiList[indexCurrentCard] && onHintedCard) {\n      if (indexCurrentCard === romajiList.length - 1) {\n        onWordCompletion();\n      }\n      onEnterPress(Date.now()); // mimic spacepress to fill hinted char\n      const newRomaji = romajiList[indexCurrentCard + 1];\n      const newKana = currentWord[indexCurrentCard + 1];\n      setCurrentChar(newKana, newRomaji);\n      // onCompleteChar(Date.now(), \"hinted\"); // maybe this should be here instead of when just requested for hint\n    } else {\n      onWrongInput(char, romajiList[indexCurrentCard]);\n      var currentChar = getKeyByValue(\n        katakanaToRomaji,\n        romajiList[indexCurrentCard]\n      );\n      updateScoreThenGetModule(thisApp, user_uid, userInputChar, \"0\")\n      updateScoreThenGetModule(thisApp, user_uid, currentChar, \"0\")\n    }\n  };\n\n  onKeyDown = (event) => {\n    const {\n      onIncorrectCard,\n      wordCompleted,\n      romajiList,\n      indexCurrentCard,\n      onWordCompletion,\n      audioIsPlaying,\n      cardStateList,\n      disableAllAction,\n      walkThroughEnabled,\n      endWalkThrough,\n      onInputBoxChange,\n    } = this.props;\n    const { which } = event;\n    const lastCardState = cardStateList[cardStateList.length - 1];\n    \n    if (walkThroughEnabled) {\n      if (which === 27) {\n        endWalkThrough();\n      } else if (disableAllAction) {\n        return event.preventDefault();\n      }\n    }\n    if (audioIsPlaying) {\n      return event.preventDefault();\n    }\n    if (\n      indexCurrentCard === romajiList.length - 1 &&\n      (lastCardState === \"correct\" || lastCardState === \"hinted\")\n    ) {\n      onWordCompletion();\n    }\n    // keycode 65 to 90 represents a-z\n    if (\n      ((which >= 65 && which <= 90) || which === 222) &&\n      !onIncorrectCard &&\n      !wordCompleted\n    ) {\n      var key =\n        which === 222\n          ? \"'\"\n          : String.fromCharCode(which).toLowerCase();\n      this.props.onKeyPress(key);\n      this.inputChecker.checkInput(key);\n      onInputBoxChange(event.target.value);\n    } else {\n      event.preventDefault();\n      if (which === 32) { // space\n        this.buttonClickOrSpacePressHandler(event);\n      } else if (which === 8) { // backspace\n        this.deleteIncorrectInput(event);\n      } else if (which === 13) { // enter\n        this.goToNextWord(event);\n        // this.fillHintedCharacter(event);\n      }\n    }\n  };\n\n  deleteIncorrectInput(event) {\n    const {\n      onIncorrectCard,\n      curWrongChar,\n      onInputBoxChange,\n      onSpacePress,\n      resetRomajiNotInDictAlert,\n    } = this.props;\n    const { value } = event.target;\n    if (onIncorrectCard) {\n      // delete wrong input from inputBox\n      event.target.value = value.slice(0, -curWrongChar.length);\n      onInputBoxChange(value);\n      onSpacePress(\"CONTINUE_AFTER_ERROR\");\n      resetRomajiNotInDictAlert();\n    } else {\n      // clear current input\n      this.clearCurrentInput(event);\n    }\n  };\n\n  clearInputBox(event) {\n    event.target.value = \"\";\n  };\n\n  goToNextWord(event) {\n    const {\n      onSpacePress,\n      onInputBoxChange,\n      wordCompleted,\n      moveToNextWord,\n      requestedWord,\n      firstTimeCompleteWordSinceWalkThrough,\n      thisApp,\n    } = this.props;\n\n    if (wordCompleted) {\n      firstTimeCompleteWordSinceWalkThrough()\n      moveToNextWord(requestedWord, thisApp);\n      onSpacePress(\"CONTINUE_AFTER_COMPLETE\");\n      event.target.value = \"\";\n      onInputBoxChange(event.target.value);\n    }\n  }\n\n  buttonClickOrSpacePressHandler = (event) => {\n    const {\n      onIncorrectCard,\n      onSpacePress,\n      onCompleteChar,\n      wordCompleted,\n      onHintedCard,\n      romajiList,\n      indexCurrentCard,\n      user_uid,\n      getKeyByValue,\n      disableAllAction,\n      updateScoreThenGetModule,\n      thisApp,\n    } = this.props;\n    \n    if (disableAllAction) {\n      return;\n    }\n\n    if (onIncorrectCard) {\n      this.deleteIncorrectInput(event)\n    } else if (!onIncorrectCard && !onHintedCard && !wordCompleted) {\n      // ask for hint\n      this.props.requestModuleInfo(this.props.thisApp);\n      onSpacePress(\"REQUEST_HINT\");\n      onCompleteChar(Date.now(), \"hinted\");\n\n      var currentChar = getKeyByValue(\n        katakanaToRomaji,\n        romajiList[indexCurrentCard]\n      );\n      updateScoreThenGetModule(thisApp, user_uid, currentChar, \"+0\")\n      // clear current input\n      this.clearCurrentInput(event);\n    } else if (wordCompleted) {\n      this.goToNextWord(event)\n    } else if (onHintedCard) {\n      // this.fillHintedCharacter(event);\n    }\n  };\n\n  clearCurrentInput = (event) => {\n    const {onInputBoxChange} = this.props;\n\n    event.target.value = this.inputChecker.buffer.length\n      ? event.target.value.slice(0, -this.inputChecker.buffer.length)\n      : event.target.value;\n    onInputBoxChange(event.target.value);\n\n    // clear inputChecker buffer\n    this.inputChecker.checkInput(\"clearBuffer\");\n  }\n\n  render() {\n    return (\n      <form>\n        <Input\n          className=\"input-box\"\n          placeholder=\"Your input...\"\n          inputProps={{ \"aria-label\": \"description\" }}\n          // onChange={this.props.onInputBoxChange} // this line cause tons of warnings\n          onKeyDown={this.onKeyDown}\n          spellCheck={false}\n          autoFocus\n          inputRef={this.formRef}\n          onPaste={(event) => {\n            event.preventDefault();\n          }}\n        />\n      </form>\n    );\n  }\n}\n\nexport default connect(mapStatestoProps, mapDispatchToProps, null, {\n  forwardRef: true,\n})(CharInput);\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"../scss/components/NavBar.scss\";\n\n// make help dialog\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\n// icons\nimport ExitToAppOutlinedIcon from \"@material-ui/icons/ExitToAppOutlined\";\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\nimport AssessmentOutlinedIcon from \"@material-ui/icons/AssessmentOutlined\";\nimport HelpOutlineOutlinedIcon from \"@material-ui/icons/HelpOutlineOutlined\";\nimport TranslateOutlinedIcon from '@material-ui/icons/TranslateOutlined';\nimport { VERSION } from \"../constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst NavBar = (props) => {\n  const classes = useStyles();\n  const { onRouteChange, currentTab } = props;\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const instructionIntro = () => {\n    return VERSION === 1 ? (\n      `Your task is to type the pronunciation of Japanese words and learn Japanese Katakana characters on the way.`\n    ) : (\n      `Your task is to type the pronunciation of Japanese Katakana characters.`\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            color=\"secondary\"\n            className={classes.title}\n            align=\"left\"\n          >\n            <div className=\"navbar-title\">JapanEZ</div>\n          </Typography>\n          <Button\n            variant=\"text\"\n            color=\"secondary\"\n            onClick={handleClickOpen}\n            startIcon={<HelpOutlineOutlinedIcon />}\n          >\n            <div className=\"navbar-button-text\">Help</div>\n          </Button>\n          <Button\n            className=\"nav-button-home\"\n            variant={currentTab === \"home\" ? \"outlined\" : \"text\"}\n            color=\"secondary\"\n            onClick={() => onRouteChange(\"home\")}\n            startIcon={<HomeOutlinedIcon />}\n          >\n            <div className=\"navbar-button-text\">Home</div>\n          </Button>\n          <div className=\"nav-button-chart\">\n            <Button\n              className=\"nav-button-progress\"\n              variant={currentTab === \"progress\" ? \"outlined\" : \"text\"}\n              color=\"secondary\"\n              onClick={() => onRouteChange(\"progress\")}\n              startIcon={<AssessmentOutlinedIcon />}\n            >\n              <div className=\"navbar-button-text\">Progress</div>\n            </Button>\n            <Button\n              className=\"nav-button-katakanaChart\"\n              variant={currentTab === \"katakanaChart\" ? \"outlined\" : \"text\"}\n              color=\"secondary\"\n              onClick={() => onRouteChange(\"katakanaChart\")}\n              startIcon={<TranslateOutlinedIcon />}\n            >\n              <div className=\"navbar-button-text\">Katakana</div>\n            </Button>\n          </div>\n          <Button\n            color=\"secondary\"\n            variant={currentTab === \"signout\" ? \"outlined\" : \"text\"}\n            onClick={() => onRouteChange(\"signin\")}\n            className=\"nav-button\"\n            startIcon={<ExitToAppOutlinedIcon />}\n          >\n            <div className=\"navbar-button-text\">Signout</div>\n          </Button>\n        </Toolbar>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Instruction\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              <p>{instructionIntro()}</p>\n\n              <p>If you don't know a Japanese character, press SPACE to learn it. But don't abuse this feature! Try to learn the character and type them out. That's the only way you can progress through this app!</p>\n\n              <p>{\"If you have any issue using the app, go to this link: \"}\n              <a style={{ color: \"black\" }} href=\"https://harvard.az1.qualtrics.com/jfe/form/SV_26xpmT4DEWO35n7\">https://harvard.az1.qualtrics.com/jfe/form/SV_26xpmT4DEWO35n7</a>\n              </p>\n\n              <p>Happy learning!</p>\n\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </AppBar>\n    </div>\n  );\n};\nexport default NavBar;\n","// Taken from this https://stackoverflow.com/questions/47686345/playing-sound-in-reactjs\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { onAudioPlay, onAudioPause } from \"../actions\";\r\nimport \"../scss/components/Music.scss\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    audioIsPlaying: state.changeGeneralState.audioIsPlaying,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAudioPlay: () => {\r\n      dispatch(onAudioPlay());\r\n    },\r\n    onAudioPause: () => {\r\n      dispatch(onAudioPause());\r\n    },\r\n  };\r\n};\r\n\r\nclass Music extends React.Component {\r\n  state = {\r\n    play: false,\r\n    audio: new Audio(this.props.audioLink),\r\n  };\r\n\r\n  stopAudioHandler = () => {\r\n    this.setState({ play: false });\r\n    if (!this.props.noStoreUpdateWhenEnded) {\r\n      this.props.onAudioPause();\r\n    }\r\n  };\r\n\r\n  simpleStopAudioHandler = () => {\r\n    this.setState({ play: false });\r\n    this.props.onAudioPause();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.bindMethod(this.togglePlay)\r\n    this.state.audio.addEventListener(\"ended\", this.stopAudioHandler);\r\n    setTimeout(() => {\r\n      if (this.props.autoplay) {\r\n        this.state.audio.play();\r\n        this.props.onAudioPlay(); \r\n      }\r\n    }, this.props.delay);\r\n  }\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n    // if (prevProps.audioLink !== this.props.audioLink) {\r\n    //   var newAudio = new Audio(this.props.audioLink);\r\n    //   newAudio.addEventListener(\"ended\", this.stopAudioHandler);\r\n    //   this.setState({ audio: newAudio });\r\n    //   if (this.props.autoplay) {\r\n    //     setTimeout(() => {\r\n    //       this.state.audio.play();\r\n    //       this.props.onAudioPlay();\r\n    //     }, this.props.delay);\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.state.audio.removeEventListener(\"ended\", this.stopAudioHandler);\r\n    this.state.audio.removeEventListener(\"ended\", this.simpleStopAudioHandler);\r\n    this.props.onAudioPause();\r\n  }\r\n\r\n  togglePlay = () => {\r\n    this.setState({ play: !this.state.play }, () => {\r\n      if (this.state.play) {\r\n        this.state.audio.play();\r\n        this.props.onAudioPlay();\r\n\r\n        // this is a wacky way of doing it, but basically I'm replacing the \"ended\" event listener\r\n        this.state.audio.removeEventListener(\"ended\", this.stopAudioHandler);\r\n        this.state.audio.removeEventListener(\r\n          \"ended\",\r\n          this.simpleStopAudioHandler\r\n        );\r\n        this.state.audio.addEventListener(\"ended\", this.simpleStopAudioHandler);\r\n      } else {\r\n        this.state.audio.pause();\r\n        this.props.onAudioPause();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Music);\r\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Music from \"./Music\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { katakanaToRomaji, katakanaHint } from \"../jap-char\";\nimport { MEDIA_BASE_URL_CHAR } from \"../constants\";\nimport \"../scss/components/Hint.scss\";\nimport CardActionArea from '@material-ui/core/CardActionArea';\n\n\nconst parseoutUnderlineText = (sentence) => {\n  // replace <b> and </b> with comma\n  sentence = sentence.replace(/<\\/?u>/g, \",\");\n  return sentence.split(\",\");\n};\n\nclass Hint extends React.Component {\n  constructor(props) {\n    super(props);\n    this.audioComponent = React.createRef();\n  }\n  render() {\n    const romaji = katakanaToRomaji[this.props.currentHintedChar];\n    const sentenceFragments = parseoutUnderlineText(\n      katakanaHint[this.props.currentHintedChar].shortHint\n    );\n    const modified_romaji = romaji === \"n'\" ? \"n\" : romaji;\n    const audioLink = MEDIA_BASE_URL_CHAR + modified_romaji + \".mp3\";\n\n    // https://stackoverflow.com/questions/37949981/call-child-method-from-parent\n    return (\n      <Card \n        className={`hint-card`} \n        onClick={this.onClickHandler}\n      >\n        <CardActionArea onClick={() => this.triggerAudioComponent()}>\n          <Music\n            audioLink={audioLink}\n            delay={0}\n            noStoreUpdateWhenEnded={false}\n            autoplay={this.props.autoplayAudio}\n            bindMethod={(childMethod) => this.triggerAudioComponent = childMethod}\n          />\n          <div className=\"hint-card-content\">\n            <h3 className=\"hint-card-romaji\">{romaji}</h3>\n            <Divider />\n            <div className=\"image-div\">\n              <img\n                src={`${katakanaHint[this.props.currentHintedChar].imageLink}`}\n                className={`hint-card-image`}\n                alt=\"Hint Card\"\n              />\n            </div>\n            <CardContent style={{ paddingTop: 0, paddingBottom: 0 }}>\n              <Typography variant=\"body2\" component=\"p\">\n                <div className=\"hint-text\">\n                  {sentenceFragments[0]}\n                  <u>{sentenceFragments[1]}</u>\n                  {sentenceFragments[2]}\n                </div>\n              </Typography>\n            </CardContent>\n          </div>\n        </CardActionArea>\n      </Card>\n    );\n  }\n}\n\nexport default Hint;\n","import React from \"react\";\r\nimport \"../scss/components/TextBlock.scss\";\r\n\r\nconst TextBlock = ({ title, description, icon }) => {\r\n  return (\r\n    <div className=\"text-block\">\r\n      {icon}\r\n      <h3>{title}</h3>\r\n      <div>{description}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextBlock;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport \"../scss/components/LoadingPopup.scss\"\r\n\r\nconst LoadingPopup = (props) => {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.isOpen}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>    \r\n          <div className=\"loading-circle\">\r\n            <CircularProgress /> \r\n          </div>\r\n          <div className=\"loading-text\">\r\n            {\"Please wait a bit, our server is waking up...\"}\r\n          </div>\r\n          \r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingPopup;","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { SIGNIN_URL, VERSION } from \"../constants\";\r\nimport \"../scss/components/Signin.scss\";\r\nimport TextBlock from \"./TextBlock\";\r\nimport LoadingPopup from \"./LoadingPopup\"\r\n\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport FontDownloadIcon from \"@material-ui/icons/FontDownload\";\r\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\r\nimport InsertChartIcon from '@material-ui/icons/InsertChart';\r\n\r\nconst useStyles = (theme) => ({\r\n  container: {\r\n    fontFamily: \"Roboto\",\r\n    backfround: \"white\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(6),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper2: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 500,\r\n      height: \"auto\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\",\r\n      emailErrorMsg: \"\",\r\n      passwordErrorMsg: \"\",\r\n      openLoadingPopup: false,\r\n    };\r\n  }\r\n\r\n  onEmailInput = (event) => {\r\n    this.setState({ signInEmail: event.target.value, emailErrorMsg: \"\" });\r\n  };\r\n\r\n  onPasswordInput = (event) => {\r\n    this.setState({ signInPassword: event.target.value, passwordErrorMsg: \"\" });\r\n  };\r\n\r\n  sendSigninInfoToBackend = () => {\r\n    const { signInEmail, signInPassword } = this.state;\r\n    this.setState({ openLoadingPopup: true })\r\n\r\n    fetch(SIGNIN_URL, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: signInEmail,\r\n        password: signInPassword,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ openLoadingPopup: false })\r\n\r\n        if (Object.keys(data).length === 4) {\r\n          this.props.loadUser(data);\r\n          this.props.onRouteChange(\"home\");\r\n          this.setState({\r\n            emailErrorMsg: \"\",\r\n            passwordErrorMsg: \"\",\r\n          });\r\n        } else {\r\n          // there is an error loggin in\r\n          console.log(\"Login Failed\", data);\r\n          if (data === \"email is not yet registered\") {\r\n            this.setState({ emailErrorMsg: data });\r\n          } else if (data === \"incorrect password\") {\r\n            this.setState({\r\n              passwordErrorMsg: data,\r\n              emailErrorMsg: \"\",\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error!\", error);\r\n      });\r\n  };\r\n\r\n  onSignIn = (event) => {\r\n    event.preventDefault();\r\n    const { signInEmail, signInPassword } = this.state;\r\n\r\n    // check that fields are not empty\r\n    if (!signInEmail) {\r\n      this.setState({ emailErrorMsg: \"please fill out your email\" });\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n    if (!signInPassword) {\r\n      this.setState({ passwordErrorMsg: \"please fill out your password\" });\r\n    } else {\r\n      this.setState({ passwordErrorMsg: \"\" });\r\n    }\r\n\r\n    if (signInEmail && signInPassword) {\r\n      this.sendSigninInfoToBackend();\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className=\"flex-container\">\r\n        <LoadingPopup isOpen={this.state.openLoadingPopup} />\r\n        <div className=\"signin-box\">\r\n          <div className=\"header\">\r\n            <h1 className=\"title\">JapanEZ</h1>\r\n            <p className=\"subtitle\">\r\n              Learn Japanese Katakana in an interactive way {VERSION === 1 ? \" as you explore English-like Japanese words\" : \"\"}\r\n            </p>\r\n          </div>\r\n          <div className=\"signin\">\r\n            <Paper className={classes.paper2} elevation={3}>\r\n              <Container\r\n                component=\"main\"\r\n                maxWidth=\"xs\"\r\n                className={classes.container}\r\n              >\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                  <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                  </Typography>\r\n                  <form className={classes.form} noValidate>\r\n                    <TextField\r\n                      error={this.state.emailErrorMsg}\r\n                      helperText={this.state.emailErrorMsg}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                      // autoFocus\r\n                      onChange={this.onEmailInput}\r\n                    />\r\n                    <TextField\r\n                      error={this.state.passwordErrorMsg}\r\n                      helperText={this.state.passwordErrorMsg}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      autoComplete=\"current-password\"\r\n                      onChange={this.onPasswordInput}\r\n                    />\r\n                    {/* <FormControlLabel\r\n                      control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                      label=\"Remember me\"\r\n                    /> */}\r\n                    <Button\r\n                      type=\"submit\"\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                      onClick={this.onSignIn}\r\n                      style={{ color: \"white\" }}\r\n                    >\r\n                      Sign In\r\n                    </Button>\r\n                    <div className=\"router\">\r\n                      {\"Don't have an account? \"}\r\n                      <Link\r\n                        component=\"button\"\r\n                        variant=\"body2\"\r\n                        onClick={() => this.props.onRouteChange(\"register\")}\r\n                      >\r\n                        {\"Register Here\"}\r\n                      </Link>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </Container>\r\n            </Paper>\r\n          </div>\r\n        </div>\r\n        <div className=\"info-panel\">\r\n          <div className=\"info-panel-inner\">\r\n            <TextBlock\r\n              icon={<AssignmentIndIcon fontSize=\"large\" />}\r\n              title=\"Tailored to your learning progress\"\r\n              description=\"Either you've just started out or you've been learning for a\r\n                while, the tool helps you master Katakana in an effective way.\"\r\n            />\r\n            <TextBlock\r\n              icon={<FeedbackIcon fontSize=\"large\" />}\r\n              title=\"Built-in mnemonics and smart feedback\"\r\n              description=\"Receive contextual feedback as you progress through the app. Use humourous illustrations and mnemonics to help you memorize characters.\"\r\n            />\r\n            { VERSION === 1 ? (\r\n              <TextBlock\r\n                icon={<FontDownloadIcon fontSize=\"large\" />}\r\n                title=\"Learn words that sound like English\"\r\n                description=\"You'd be surprised how many common Japanese words you've already known. For example, the Japnese word for tomato is トマト, which is pronounced 'to-mah-to'.\"\r\n              />\r\n            ) : (\r\n              null\r\n            )}\r\n            <TextBlock\r\n              icon={<InsertChartIcon fontSize=\"large\" />}\r\n              title=\"Easily keep track of your progress\"\r\n              description=\"You can view your learning progress through interactive and animated visuals and charts.\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Signin);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { REGISTER_URL, VERSION } from \"../constants\";\r\nimport \"../scss/components/Signin.scss\";\r\nimport TextBlock from \"./TextBlock\";\r\nimport LoadingPopup from \"./LoadingPopup\";\r\n\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport FontDownloadIcon from \"@material-ui/icons/FontDownload\";\r\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\r\nimport InsertChartIcon from '@material-ui/icons/InsertChart';\r\n\r\nconst useStyles = (theme) => ({\r\n  container: {\r\n    fontFamily: \"Roboto\",\r\n    backfround: \"white\", // ???\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(5),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper2: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 500,\r\n      height: \"auto\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      nameError: false,\r\n      emailError: false,\r\n      passwordError: false,\r\n      nameErrorMsg: \"\",\r\n      emailErrorMsg: \"\",\r\n      passwordErrorMsg: \"\",\r\n      openLoadingPopup: false,\r\n    };\r\n  }\r\n\r\n  validateEmail(email) {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  onNameInput = (event) => {\r\n    this.setState({ name: event.target.value, nameErrorMsg: \"\" });\r\n  };\r\n\r\n  onEmailInput = (event) => {\r\n    this.setState({ email: event.target.value, emailErrorMsg: \"\" });\r\n  };\r\n\r\n  onPasswordInput = (event) => {\r\n    this.setState({ password: event.target.value, passwordErrorMsg: \"\" });\r\n  };\r\n\r\n  sendFormDataToBackEnd = () => {\r\n    const { name, email, password } = this.state;\r\n    this.setState({ openLoadingPopup: true })\r\n\r\n    fetch(REGISTER_URL, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ openLoadingPopup: false })\r\n\r\n        if (Object.keys(data).length === 4) {\r\n          this.setState({ emailErrorMsg: \"\" });\r\n          this.props.loadUser(data);\r\n          this.props.onRouteChange(\"home\");\r\n        } else {\r\n          // if user already exist\r\n          this.setState({ emailErrorMsg: data });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error!\", error);\r\n      });\r\n  };\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { name, email, password } = this.state;\r\n\r\n    if (!name) {\r\n      this.setState({ nameErrorMsg: \"please fill out your name\" });\r\n    } else {\r\n      this.setState({ nameErrorMsg: \"\" });\r\n    }\r\n    if (!email) {\r\n      this.setState({ emailErrorMsg: \"please fill out your email\" });\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n    if (!password) {\r\n      this.setState({ passwordErrorMsg: \"please fill out your password\" });\r\n    } else {\r\n      this.setState({ passwordErrorMsg: \"\" });\r\n    }\r\n\r\n    if (!this.validateEmail(email)) {\r\n      this.setState({ emailErrorMsg: \"please enter a valid email address\" });\r\n      return;\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n\r\n    if (name && password && email) {\r\n      this.sendFormDataToBackEnd();\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(\"IS THIS RENDERING?\")\r\n    const { classes } = this.props;\r\n    const { nameErrorMsg, emailErrorMsg, passwordErrorMsg } = this.state;\r\n    return (\r\n      <div className=\"flex-container\">\r\n        <LoadingPopup isOpen={this.state.openLoadingPopup} />\r\n        <div className=\"signin-box\">\r\n          <div className=\"header\">\r\n            <h1 className=\"title\">JapanEZ</h1>\r\n            <p className=\"subtitle\">\r\n              Learn Japanese Katakana in an interactive way {VERSION === 1 ? \" as you explore English-like Japanese words\" : \"\"}\r\n            </p>\r\n          </div>\r\n          <div className=\"signin\">\r\n            <Paper className={classes.paper2}>\r\n              <Container\r\n                component=\"main\"\r\n                maxWidth=\"xs\"\r\n                className={classes.container}\r\n              >\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                  <Typography component=\"h1\" variant=\"h5\" >\r\n                    <div className=\"form-title\">\r\n\r\n                    Register\r\n                    </div>\r\n                  </Typography>\r\n                  <form className={classes.form} noValidate>\r\n                    <TextField\r\n                      error={nameErrorMsg}\r\n                      helperText={nameErrorMsg}\r\n                      variant=\"outlined\"\r\n                      id=\"name\"\r\n                      label=\"Your Name\"\r\n                      // autoFocus\r\n                      fullWidth\r\n                      onChange={this.onNameInput}\r\n                    />\r\n                    <TextField\r\n                      error={emailErrorMsg}\r\n                      helperText={emailErrorMsg}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                      onChange={this.onEmailInput}\r\n                    />\r\n                    <TextField\r\n                      error={passwordErrorMsg}\r\n                      helperText={passwordErrorMsg}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      autoComplete=\"current-password\"\r\n                      onChange={this.onPasswordInput}\r\n                    />\r\n                    <Button\r\n                      type=\"submit\"\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                      onClick={this.onFormSubmit}\r\n                      style={{ color: \"#ffffff\" }}\r\n                    >\r\n                      Get started\r\n                    </Button>\r\n                    <div className=\"router\">\r\n                      {\"Already registered? \"}\r\n                      <Link\r\n                        component=\"button\"\r\n                        variant=\"body2\"\r\n                        onClick={() => this.props.onRouteChange(\"signin\")}\r\n                      >\r\n                        {\"Sign In\"}\r\n                      </Link>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </Container>\r\n            </Paper>\r\n          </div>\r\n        </div>\r\n        <div className=\"info-panel\">\r\n          <div className=\"info-panel-inner\">\r\n            <TextBlock\r\n              icon={<AssignmentIndIcon fontSize=\"large\" />}\r\n              title=\"Tailored to your learning progress\"\r\n              description=\"Either you've just started out or you've been learning for a\r\n                while, the tool helps you master Katakana in an effective way.\"\r\n            />\r\n            <TextBlock\r\n              icon={<FeedbackIcon fontSize=\"large\" />}\r\n              title=\"Built-in mnemonics and smart feedback\"\r\n              description=\"Receive contextual feedback as you progress through the app. Use humourous illustrations and mnemonics to help you memorize characters.\"\r\n            />\r\n            { VERSION === 1 ? (\r\n              <TextBlock\r\n                icon={<FontDownloadIcon fontSize=\"large\" />}\r\n                title=\"Learn words that sound like English\"\r\n                description=\"You'd be surprised how many common Japanese words you've already known. For example, the Japnese word for tomato is トマト, which is pronounced 'to-mah-to'.\"\r\n              />\r\n            ) : (\r\n              null\r\n            )}\r\n            <TextBlock\r\n              icon={<InsertChartIcon fontSize=\"large\" />}\r\n              title=\"Easily keep track of your progress\"\r\n              description=\"You can view your learning progress through interactive and animated visuals and charts.\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Register);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport \"../scss/components/WordCard.scss\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function WordCard({ wordInfo }) {\r\n  const classes = useStyles();\r\n  var el = document.createElement(\"html\");\r\n  el.innerHTML = \"<b>bolded text</b>\";\r\n\r\n  var word_meaning = null;\r\n  var word_pos = null;\r\n\r\n  if (Object.keys(wordInfo).includes(\"word\")) {\r\n    word_meaning = wordInfo.meaning;\r\n    word_pos = wordInfo.part_of_speech;\r\n  } else {\r\n    word_meaning = wordInfo.vocab_meaning;\r\n    word_pos = wordInfo.vocab_pos;\r\n  }\r\n\r\n  // fix pos format from marshallyin site\r\n  if (word_pos.includes(\"&\")) {\r\n    word_pos = word_pos.replace(/&/g, \" & \");\r\n  }\r\n  if (word_pos.includes(\"suru-Verb\")) {\r\n    word_pos = word_pos.replace(/suru-Verb/g, \"Verb\");\r\n  }\r\n  if (word_pos.includes(\"na-Adj\")) {\r\n    word_pos = word_pos.replace(/na-Adj/g, \"Adj\");\r\n  }\r\n\r\n  return (\r\n    <Card className={`${classes.root} word-card `}>\r\n      <CardContent>\r\n        \r\n        <Typography\r\n          className={`${classes.title}`}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          <div className=\"wordcard-subtext subtext-meaning\">Word Meaning</div>\r\n        </Typography>\r\n        <h3 className=\"bolded-style\">{word_meaning}</h3>\r\n        <Divider style={{ marginTop: \"calc(5px + 0.5vh)\" }} />\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          <div className=\"wordcard-subtext subtext-pos\">Part of Speech</div>\r\n        </Typography>\r\n        <Typography variant=\"h3\" component=\"h4\">\r\n          <div className=\"wordcard-pos\">\r\n            {word_pos}\r\n          </div>\r\n        </Typography>  \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","// https://stackoverflow.com/questions/32553158/detect-click-outside-react-component\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass OutsideAlerter extends React.Component {\r\n  componentDidMount = () => {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  };\r\n\r\n  setWrapperRef = (node) => {\r\n    this.wrapperRef = node;\r\n  };\r\n\r\n  handleClickOutside = (event) => {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      // for some reason, need setTimeout to work, even if 0 delay\r\n      setTimeout(() => {\r\n        this.props.focusInputBox();\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div ref={this.setWrapperRef}>{this.props.children}</div>;\r\n  }\r\n}\r\n\r\nOutsideAlerter.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default OutsideAlerter;\r\n","import React from \"react\";\r\nimport \"../scss/components/Footer.scss\";\r\nimport { \r\n  TOFUGU_LINK, \r\n  WORD_LINK, \r\n  MARSHALSITE_LINK, \r\n  VERSION,\r\n} from \"../constants\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"main-footer\">\r\n      <div>\r\n        <p>\r\n          {\"Mnemonics taken from \"}\r\n          <a href={TOFUGU_LINK}>tofugu.com</a>\r\n        </p>\r\n        { VERSION === 1 ? (\r\n          <p>\r\n            {\"Japanese words taken from \"}\r\n            <a href={WORD_LINK}>reddit.com/r/LearnJapanese</a>\r\n            {\", and \"}\r\n            <a href={MARSHALSITE_LINK}>marshallyin.com/katakana-list</a>\r\n          </p>\r\n        ) : ( null )\r\n        }\r\n      </div>\r\n      <hr />\r\n      <div className=\"copyright\">\r\n        <small>\r\n          Copyright © 2020 Tuan Le, Lien Tran. All Rights Reserved.\r\n        </small>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"../scss/components/MessageBar.scss\";\r\nimport shortid from \"shortid\";\r\n\r\nconst MessageBar = (props) => {\r\n  return (\r\n    <div className=\"message-box\">\r\n      <div className=\"message\">\r\n        {props.displayHelpMessages ? (\r\n          <p key={shortid.generate()}>\r\n            {props.message}\r\n          </p>\r\n        ) : (\r\n          <p>\r\n            {`Welcome, ${props.userName}.`}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageBar;\r\n","import React from \"react\";\r\nimport \"../scss/components/SmallChar.scss\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\n// links below shows how to transition between gradient background\r\n// https://medium.com/@dave_lunny/animating-css-gradients-using-only-css-d2fd7671e759\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  cardBG: {\r\n    background: (props) => {\r\n      const correctPercent = calcCorrectPercent(props.correctNum, props.hintedNum);\r\n      return props.correctNum === 0 && props.hintedNum === 0\r\n        ? \"#d6d6d6\"\r\n        : `linear-gradient(0deg, green 0% ${correctPercent}%, \r\n          #f2b50c ${correctPercent}% 100%)`;\r\n    },\r\n  },\r\n}));\r\n\r\nconst calcCorrectPercent = (correctNum, hintNum) => {\r\n  if (hintNum > 0) {\r\n    return (correctNum / (correctNum + hintNum)) * 100;\r\n  } else {\r\n    return 100;\r\n  }; \r\n}\r\n\r\nfunction SmallChar(props) {\r\n  const { char, correctNum, hintedNum, isLoading } = props;\r\n  const classes = useStyles(props);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <div>\r\n      { isLoading ? (\r\n        <Skeleton \r\n          variant=\"wave\" \r\n          width={\"calc(5vh + 28px)\"} \r\n          height={\"calc(5vh + 35px)\"} \r\n          style={{ \r\n            borderRadius: \"calc(7px + 1vh)\",\r\n            maxWidth: \"75px\",\r\n            maxHeight: \"80px\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <div>\r\n          <div className={`noselect flipcard`} id={id} onClick={handleClick}>\r\n            <div className=\"flipcard-content\">\r\n              <div className={`flipcard-front ${classes.cardBG}`}>\r\n                <span>\r\n                  <b>{char}</b>\r\n                </span>\r\n              </div>\r\n              <div className=\"flipcard-back\">\r\n                <p>\r\n                  {correctNum} <span className=\"dot correct-color\"></span>\r\n                </p>\r\n                <p>\r\n                  {hintedNum} <span className=\"dot hinted-color\"></span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Popover\r\n            id={id}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\",\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            <Typography className={classes.typography}>\r\n              {`${correctNum} correct, ${hintedNum} hinted`}\r\n            </Typography>\r\n          </Popover>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SmallChar;\r\n","import React from \"react\";\r\nimport SmallChar from \"../components/SmallChar.js\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { limitedKatakanaList } from \"../jap-char\";\r\nimport \"../scss/components/SmallChar.scss\";\r\n\r\nclass SmallCharList extends React.Component {\r\n  componentDidMount = () => {\r\n    this.props.requestGetCharScore();\r\n  };\r\n\r\n  computeCorrectNum = (resultList) => {\r\n    return resultList.length === 0\r\n      ? 0\r\n      : resultList.reduce((acc, item) => {\r\n          if (item === \"correct\") {\r\n            acc += 1;\r\n          }\r\n          return acc;\r\n        }, 0);\r\n  };\r\n\r\n  computeIncorrectNum = (resultList) => {\r\n    return resultList.length === 0\r\n      ? 0\r\n      : resultList.reduce((acc, val) => {\r\n          if (val === \"incorrect\") {\r\n            acc += 1;\r\n          }\r\n          return acc;\r\n        }, 0);\r\n  };\r\n\r\n  render() {\r\n    var charsArrayDisplay = null;\r\n    var charResultList = this.props.charResultList;\r\n\r\n    if (Object.keys(this.props.charResultList).length === 0) {\r\n      charsArrayDisplay = limitedKatakanaList.map((kana, idx) => {\r\n          return (\r\n            <Grid item key={idx}>\r\n              <SmallChar\r\n                char={kana}\r\n                key={idx}\r\n                hintedPercent={0}\r\n                correctPercent={0}\r\n                correctNum={0}\r\n                hintedNum={0}\r\n                isLoading={true}\r\n              />\r\n            </Grid>\r\n          ); \r\n      });\r\n    } else {\r\n      charsArrayDisplay = limitedKatakanaList.map((kana, idx) => {\r\n        if (kana !== \"clearBuffer\") {\r\n          var resultList = charResultList[kana]\r\n          var correctNum = this.computeCorrectNum(resultList);\r\n          var incorrectNum = this.computeIncorrectNum(resultList);\r\n          var hintedNum = resultList.length - correctNum - incorrectNum;\r\n          return (\r\n            <Grid item key={idx}>\r\n              <SmallChar\r\n                char={kana}\r\n                key={idx}\r\n                correctNum={correctNum}\r\n                hintedNum={hintedNum}\r\n                isLoading={false}\r\n              />\r\n            </Grid>\r\n          );\r\n        } else {\r\n          return null;\r\n        }\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"characters-list\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing=\"2\"\r\n        >\r\n          {charsArrayDisplay}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SmallCharList;\r\n","import React from \"react\";\r\nimport { katakanaToRomaji } from \"../jap-char\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../scss/components/KatakanaChar.scss\";\r\nimport { PRIMARYCOLOR } from \"../constants\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardBG: {\r\n    background: (props) => {\r\n      return props.isEncountered ? PRIMARYCOLOR : \"#d6d6d6\"\r\n    }\r\n  }\r\n}))\r\n\r\nconst KatakanaChar = (props) => {\r\n  const { char, isLoading } = props;\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <div>\r\n      { isLoading ? (\r\n        <Skeleton \r\n          variant=\"wave\" \r\n          width={\"calc(5vh + 28px)\"} \r\n          height={\"calc(5vh + 35px)\"} \r\n          style={{ \r\n            borderRadius: \"calc(7px + 1vh)\",\r\n            maxWidth: \"75px\",\r\n            maxHeight: \"80px\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <div>\r\n          <div className={`noselect flipcard2`}>\r\n            <div className=\"flipcard-content2\">\r\n              <div className={`flipcard-front2 ${classes.cardBG}`}>\r\n                <span>\r\n                  <b>{char}</b>\r\n                </span>\r\n              </div>\r\n              <div className={`flipcard-back2 ${classes.cardBG}`}>\r\n                <span>\r\n                  <b>{katakanaToRomaji[char]}</b>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KatakanaChar;","import React from \"react\";\r\nimport LoadingPopup from \"./LoadingPopup\";\r\nimport { GETCHARSCORE_URL } from \"../constants\";\r\nimport { limitedKatakanaList } from \"../jap-char\";\r\nimport KatakanaChar from \"./KatakanaChar\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport \"../scss/components/KatakanaChar.scss\";\r\n\r\nclass KatakanaChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.requestGetCharScore();\r\n  }\r\n\r\n  render() {\r\n    var katakanaArray = null;\r\n    var kana_filteredResultList = null;\r\n    var charResultList = this.props.charResultList;\r\n\r\n    if (Object.keys(charResultList).length === 0) {\r\n      // return <LoadingPopup isOpen={true} />\r\n      // if haven't receive data\r\n      katakanaArray = limitedKatakanaList.map((kana, idx) => {\r\n        return (\r\n          <Grid item key={idx}>\r\n            <KatakanaChar\r\n              char={kana}\r\n              key={idx}\r\n              isEncountered={false}\r\n              isLoading={true}\r\n            />\r\n          </Grid>\r\n        );\r\n      });\r\n    } else {\r\n      console.log(`DEBUG 二 ${JSON.stringify(charResultList[\"二\"])}`)\r\n      katakanaArray = limitedKatakanaList.map((kana, idx) => {\r\n        kana_filteredResultList = charResultList[kana].filter(resultType => resultType !== \"incorrect\")\r\n        console.log(`${kana}: ${kana_filteredResultList}`);\r\n        return (\r\n          <Grid item key={idx}>\r\n            <KatakanaChar\r\n              char={kana}\r\n              key={idx}\r\n              isEncountered={kana_filteredResultList.length > 0}\r\n              isLoading={false}\r\n            />\r\n          </Grid>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"characters-list\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing=\"2\"\r\n        >\r\n          {katakanaArray}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  };\r\n\r\n}\r\n\r\nexport default KatakanaChart;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nconst calculateProgress = (totalRep, remainingRep) => {\r\n  return (totalRep - remainingRep) / totalRep * 100;\r\n}\r\n\r\nexport default function LinearDeterminate(props) {\r\n  const classes = useStyles();\r\n  const { moduleInfo } = props;\r\n  var totalRepetition = null;\r\n  var totalRemainingRepetition = null;\r\n\r\n  if (moduleInfo) {\r\n    totalRepetition = moduleInfo.totalRepetition/2; // could use 1\r\n    totalRemainingRepetition = moduleInfo.totalRemainingRepetition;\r\n  }\r\n  const progressPercent = calculateProgress(totalRepetition, totalRemainingRepetition);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress variant=\"determinate\" value={progressPercent} />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CircularIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n      <CircularProgress color=\"secondary\" />\r\n    </div>\r\n  );\r\n}","import { VERSION } from \"../constants\";\r\n\r\nconst listOfPraises = [\r\n  \"Great job!\",\r\n  \"You're a pro!\",\r\n  \"You're getting better!\",\r\n  \"You're getting good at this!\",\r\n  \"You're getting good!\",\r\n  \"Well done!\",\r\n  \"Nicely done!\",\r\n  \"Good job!\",\r\n];\r\n\r\nconst listOfSoftPraises = [\r\n  \"Correct!\",\r\n  \"Nice!\",\r\n  \"Good!\",\r\n  \"Awesome!\",\r\n  \"Well done!\",\r\n  \"Great!\",\r\n  \"Good job!\",\r\n  \"Bravo!\",\r\n];\r\n\r\nconst listOfEncouragements = [\r\n  \"You got this!\",\r\n  \"Let's try again.\",\r\n  \"You can do this!\",\r\n  \"Try again.\",\r\n];\r\n\r\nconst welcomeText = (version) => {\r\n  return (version === 1 ? (\r\n    `Welcome! Your challenging is to type out the pronunciation of Japanese words.`\r\n  ) : (\r\n    `Welcome! Your challenging is to type out the pronunciation of Japanese characters.`\r\n  ));\r\n};\r\n\r\nconst Introduction = [\r\n  {\r\n    intro: welcomeText(VERSION),\r\n  },\r\n  {\r\n    intro: \"If you don't know a Japanese character, simply press SPACEBAR to learn them.\",\r\n  },\r\n  {\r\n    element: \".nav-button-home\",\r\n    intro: `You are currently on the 'Home' tab.`,\r\n    position: \"bottom\"\r\n  },\r\n  {\r\n    element: \".nav-button-chart\",\r\n    intro: \"Don't forget to check in on these two tabs to view your progress!\",\r\n    position: \"bottom\",\r\n  },\r\n  {\r\n    intro: `I hope you have fun learning!`,\r\n  },\r\n];\r\n\r\nexport { \r\n  listOfPraises,\r\n  listOfSoftPraises,\r\n  listOfEncouragements,\r\n  Introduction,\r\n};","import {\r\n  GETWORD_URL,\r\n  UPDATECHARSCORE_URL,\r\n  WORDSCORE_URL,\r\n  MEDIA_BASE_URL_WORD,\r\n  USER_TIME_LIMIT_IN_MINUTES,\r\n  GETMODULEINFO_URL,\r\n  GETCHAR_URL,\r\n  VERSION,\r\n} from \"../constants\";\r\nimport { katakanaToRomaji } from \"../jap-char\";\r\n\r\nconst parseJapaneseWord = (katakana_word) => {\r\n  var charsToRead = [];\r\n  for (const katakana_char of katakana_word) {\r\n    var katakana_romaji = katakanaToRomaji[katakana_char] || \"??\";\r\n    charsToRead.push({ \r\n      char: katakana_char, \r\n      romaji: katakana_romaji \r\n    });\r\n  }\r\n  return charsToRead;\r\n};\r\n\r\nconst updateScoreThenGetModule = async (thisApp, user_uid, katakana_char, score) => {\r\n  const response = await fetch(UPDATECHARSCORE_URL, {\r\n    method: \"post\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      user_uid: user_uid,\r\n      char: katakana_char,\r\n      score: score,\r\n    }),\r\n  });\r\n  await response.json();\r\n  requestModuleInfo(thisApp);\r\n};\r\n\r\nconst updateCharScore = async (user_uid, katakana_char, score) => {\r\n  fetch(UPDATECHARSCORE_URL, {\r\n    method: \"post\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      user_uid: user_uid,\r\n      char: katakana_char,\r\n      score: score,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then(() => {\r\n      console.log(`SUCCESS: updated characters score`)\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"Failed to update char score\", error);\r\n    });\r\n};\r\n\r\n// not used\r\nconst updateWordScore = (user_uid, word) => {\r\n  fetch(WORDSCORE_URL, {\r\n    method: \"post\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      user_uid: user_uid,\r\n      word: word,\r\n      unix_time: this.state.currentWord_unix_time,\r\n    }),\r\n  })\r\n  .then((res) => res.json())\r\n  .then(() => {\r\n    this.requestNewWord();\r\n  })\r\n  .catch((error) => {\r\n    console.log(\"Failed to update word score\", error);\r\n  });\r\n};\r\n\r\nconst parseAudio = (audio_string) => {\r\n  return audio_string.slice(7, audio_string.length - 1);\r\n};\r\n\r\nconst requestModuleInfo = async (thisApp) => {\r\n  const version = VERSION === 2 ? \"2\" : \"\";\r\n  fetch(GETMODULEINFO_URL, {\r\n    method: \"post\",\r\n    headers: { \"Content-Type\": \"application/json\"},\r\n    body: JSON.stringify({\r\n      userId: thisApp.state.userInfo.id,\r\n      version: version,\r\n    }),\r\n  })\r\n  .then((res) => res.json())\r\n  .then((moduleInfoObject) => {\r\n    thisApp.setState({ moduleInfo: moduleInfoObject });\r\n    console.log(`SUCCESS: fetched module`)\r\n  })\r\n  .catch((error) => {\r\n    console.log(`Error in requestModuleInfo: ${error}`);\r\n  });\r\n}\r\n\r\nconst requestNewWordPromise = async (thisApp) => {\r\n  return new Promise(resolve => {\r\n    thisApp.setState({ clickedJapChar: \"\" });\r\n    thisApp.setState({ isFetchingWord: true })\r\n    thisApp.setState({ wordRequestTimeStamp: Date.now() })\r\n    fetch(GETWORD_URL, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_uid: thisApp.state.userInfo.id,\r\n      }),\r\n    })\r\n    .then((res) => res.json())\r\n    .then((word) => {\r\n      if (word === \"END GAME\") {\r\n        thisApp.setState({ openEndDialogue: true });\r\n      }\r\n      thisApp.setState({ isFetchingWord: false });\r\n      thisApp.setState({ requestedWord: word });\r\n      resolve();\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Error in getting next word\", err);\r\n    });\r\n  });\r\n};\r\n\r\nconst requestNewCharPromise = async (thisApp) => {\r\n  return new Promise(resolve => {\r\n    thisApp.setState({ clickedJapChar: \"\" });\r\n    thisApp.setState({ isFetchingWord: true });\r\n    thisApp.setState({ wordRequestTimeStamp: Date.now() });\r\n    fetch(GETCHAR_URL, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_uid: thisApp.state.userInfo.id,\r\n      }),\r\n    }).then((res) => res.json())\r\n      .then((word) => {         \r\n        thisApp.setState({ isFetchingWord: false });\r\n        thisApp.setState({ requestedWord: word });\r\n        resolve();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error in getting next char\", err);\r\n      });\r\n  });\r\n};\r\n\r\nconst requestNewWord = async (thisApp) => {\r\n  if (thisApp.props.version === 1) {\r\n    return requestNewWordPromise(thisApp);\r\n  } else if (thisApp.props.version === 2) {\r\n    return requestNewCharPromise(thisApp);\r\n  } else {\r\n    console.log(`version should either be 1 or 2`);\r\n  }\r\n};\r\n\r\nconst transitionToNextWord = async (word, thisApp) => {\r\n  const { setCurrentChar, updateWord } = thisApp.props;\r\n  var romajiList = [];\r\n  thisApp.requestModuleInfo(thisApp);\r\n  if (Object.keys(word).includes(\"word\")) {\r\n    romajiList = parseJapaneseWord(word.word).map(\r\n    (kana_char) => kana_char.romaji\r\n    );\r\n    updateWord(word.word, romajiList);\r\n    setCurrentChar(word.word.charAt(0), romajiList[0]);\r\n  } else {\r\n    romajiList = parseJapaneseWord(word.vocab_kana).map(\r\n      (kana_char) => kana_char.romaji\r\n    );\r\n    updateWord(word.vocab_kana, romajiList);\r\n    setCurrentChar(word.vocab_kana.charAt(0), romajiList[0]);\r\n    const audio_url = `${MEDIA_BASE_URL_WORD}${parseAudio(word.vocab_sound_local)}`\r\n    const word_audio = new Audio(audio_url);\r\n    word_audio.on(\"loadedmetadata\", (event) => {\r\n      thisApp.setState({\r\n        word_audio_duration: event.target.duration,\r\n      });\r\n    });\r\n  }\r\n  thisApp.setState({ currentWordInfo: word });\r\n  thisApp.setState({ currentWord_unix_time: Date.now() });\r\n};\r\n\r\nconst transitionToNextChar = async (char, thisApp) => {\r\n  const { setCurrentChar, updateWord } = thisApp.props;\r\n  setCurrentChar(char, katakanaToRomaji[char]);\r\n  updateWord(char, [katakanaToRomaji[char]]);\r\n  thisApp.setState({ currentWordInfo: char });\r\n  thisApp.setState({ currentWord_unix_time: Date.now() });\r\n  thisApp.requestModuleInfo(thisApp);\r\n};\r\n\r\nconst moveToNextWord = async (word, thisApp) => {\r\n  if (thisApp.props.version === 1) {\r\n    transitionToNextWord(word, thisApp);\r\n  } else if (thisApp.props.version === 2) {\r\n    transitionToNextChar(word, thisApp);\r\n  } else {\r\n    console.log(`version should either be 1 or 2`);\r\n  }\r\n};\r\n\r\nexport {\r\n  parseJapaneseWord,\r\n  updateCharScore,\r\n  parseAudio,\r\n  requestModuleInfo,\r\n  requestNewWordPromise,\r\n  requestNewCharPromise,\r\n  transitionToNextWord,\r\n  transitionToNextChar,\r\n  moveToNextWord,\r\n  requestNewWord,\r\n  updateScoreThenGetModule,\r\n};\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CharList from \"./CharList\";\nimport CharInput from \"./CharInput\";\nimport NavBar from \"../components/NavBar\";\nimport Hint from \"../components/Hint\";\nimport { \n  Grid, \n  Paper,\n  Switch,\n  Box,\n  FormControlLabel,\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport Signin from \"../components/Signin\";\nimport Register from \"../components/Register\";\nimport WordCard from \"../components/WordCard\";\nimport OutsideAlerter from \"../components/OutsideAlerter\";\nimport Footer from \"../components/Footer\";\nimport MessageBar from \"../components/MessageBar\";\nimport SmallCharList from \"../components/SmallCharList\";\nimport KatakanaChart from \"../components/KatakanaChart\";\nimport LoadingPopup from \"../components/LoadingPopup\"\nimport LinearDeterminate from \"../components/LinearDeterminate\";\nimport CircularIndeterminate from \"../components/CircularIndeterminate\";\nimport \"../scss/containers/App.scss\";\nimport { katakanaToRomaji } from \"../jap-char\";\nimport {\n  updateChar,\n  updateWord,\n  resetStore,\n  loadUserToStore,\n} from \"../actions\";\nimport {\n  USER_TIME_LIMIT_IN_MINUTES,\n  GETCHARSCORE_URL,\n} from \"../constants\";\nimport {\n  listOfPraises,\n  listOfSoftPraises,\n  Introduction,\n} from \"../constants/App-constants\";\nimport {\n  parseJapaneseWord,\n  requestModuleInfo,\n  moveToNextWord,\n  requestNewWord,\n  updateScoreThenGetModule,\n} from \"../constants/App-methods\";\nimport LogRocket from \"logrocket\";\nimport 'intro.js/introjs.css';\nimport { Steps } from 'intro.js-react';\n\nLogRocket.init(\"zskhtw/japanese-learning\");\n\nconst mapStateToProps = (state) => {\n  return {\n    currentJapChar: state.changeCardState.currentJapChar,\n    onIncorrectCard: state.changeCardState.onIncorrectCard,\n    curWrongChar: state.changeCardState.curWrongChar,\n    onHintedCard: state.changeCardState.onHintedCard,\n    wordCompleted: state.changeCardState.wordCompleted,\n    currentWord: state.changeCardState.currentWord,\n    audioIsPlaying: state.changeGeneralState.audioIsPlaying,\n    romajiNotInDict: state.changeInputBox.romajiNotInDict,\n    cardStateList: state.changeCardState.cardStateList,\n    indexCurrentCard: state.changeCardState.indexCurrentCard,\n    wrongCharList: state.changeCardState.wrongCharList,\n    romajiList: state.changeCardState.romajiList,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCurrentChar: (japchar, romaji) => {\n      dispatch(updateChar(japchar, romaji));\n    },\n    updateWord: (word, romajiList) => {\n      dispatch(updateWord(word, romajiList));\n    },\n    resetStore: () => {\n      dispatch(resetStore());\n    },\n    loadUserToStore: (userInfo) => {\n      dispatch(loadUserToStore(userInfo));\n    },\n  };\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: \"home\", // should be register\n      userInfo: {\n        email: \"developer@g.com\",\n        joined: \"2020-10-26T14:19:40.915Z\",\n        name: \"Developer\",\n        id: \"5ab535f5-b0eb-4a9b-98b5-b6b86cd8d328\",\n      },\n      // userInfo: {\n      //   id: \"\",\n      //   name: \"\",\n      //   email: \"\",\n      //   joined: \"\",\n      // },\n      requestedWord: null,\n      charResultList: {},\n      isFetchingCharResult: false,\n\n      currentWordInfo: null,\n      openEndDialogue: false,\n      isFetchingWord: false,\n      checkedAudioAutoPlay: false,\n      checkedEnableMessage: true,\n      walkThroughEnabled: false,\n\n      // introjs test\n      initialStep: 0,\n      introductory_steps: Introduction,\n      disableAllAction: false,\n      firstTimeCompleteWordSinceWalkThru: false,\n      firstIntroductionEnabled: false,\n      moduleInfo: null,\n      randomIndex: 0,\n    };\n    this.charInputRef = React.createRef();\n    this.hintCardRef = React.createRef();\n    this.wordCardRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.props.resetStore();\n    this.requestAndUpdateWord();\n    this.requestModuleInfo(this);\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    // check if it's user's first time logging in\n    if (this.state.route === \"home\"\n        && prevState.route === \"register\") {\n      this.setState({ walkThroughEnabled: false }) // TODO should be true, if want to enable by default when login first time\n      this.setState({ firstIntroductionEnabled: true });\n      this.setState({ requestNewWord: null });\n      this.requestModuleInfo(this);\n    } \n    if (this.state.userInfo.id !== prevState.userInfo.id) {\n      this.props.resetStore();\n      this.requestAndUpdateWord();\n      this.requestModuleInfo(this);\n    }\n    if (this.props.wordCompleted \n        && this.props.wordCompleted !== prevProps.wordCompleted) {\n      this.requestNewWord(this);\n    }\n    if (this.state.route === \"home\") {\n      setTimeout(() => {\n        this.setState({ openEndDialogue: true });\n      }, USER_TIME_LIMIT_IN_MINUTES * 60000);\n    }\n    if (this.state.requestedWord !== prevState.requestedWord) {\n      this.setState({ randomIndex: Math.floor(Math.random() * 8) })\n    }\n    // if (this.state.route === \"home\" \n    //   && (prevState.route === \"register\" || prevState.route === \"login\")) {\n    //   this.setState({ requestNewWord: null });\n    // }\n  };\n\n  loadUser = (user) => {\n    const { user_uid, name, email, joined } = user;\n    this.setState((prevState) => {\n      let userInfo = { ...prevState.userInfo };\n      userInfo.name = name;\n      userInfo.id = user_uid;\n      userInfo.email = email;\n      userInfo.joined = joined;\n      return { userInfo };\n    });\n    this.props.loadUserToStore(user);\n    LogRocket.identify(user_uid, {\n      name: name,\n      email: email,\n      joined: joined,\n    });\n    console.log(\"userInfo\", this.state.userInfo);\n  };\n\n  onRouteChange = (route) => {\n    this.setState({ route: route });\n  };\n  requestModuleInfo = requestModuleInfo;\n  requestNewWord = requestNewWord;\n  moveToNextWord = moveToNextWord;\n  updateScoreThenGetModule = updateScoreThenGetModule;\n\n  requestAndUpdateWord = async () => {\n    await this.requestNewWord(this);\n    this.moveToNextWord(this.state.requestedWord, this);\n  };\n\n  requestGetCharScore = () => {\n    this.setState({ isFetchingCharResult: true });\n    fetch(GETCHARSCORE_URL, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_uid: this.state.userInfo.id,\n      }),\n    })\n    .then((res) => res.json())\n    .then((charResultList) => {\n      this.setState({ isFetchingCharResult: false });\n      this.setState({ charResultList: charResultList });\n    })\n    .catch((err) => {\n      console.log(\"Error in getting characters' familiarity\", err);\n    });\n  };\n\n  focusInputBox = () => {\n    this.charInputRef.current.formRef.current.focus();\n  };\n\n  onClickCard = (event) => {\n    const kana_char = event.target.innerText;\n    this.setState({ clickedJapChar: kana_char });\n    // unclick\n    if (this.state.clickedJapChar === kana_char) {\n      this.setState({ clickedJapChar: \"\" });\n    }\n  };\n\n  showHint = () => {\n    // once user completed word, can review hint card\n    if (this.props.wordCompleted && this.state.clickedJapChar) {\n      return (\n        <Grid item>\n          <Paper elevation={1} />\n          <Hint \n            currentHintedChar={this.state.clickedJapChar} \n            autoplayAudio={this.state.checkedAudioAutoPlay}\n            ref={this.hintCardRef}\n          />\n        </Grid>\n      );\n    }\n    if (this.props.onHintedCard) {\n      return (\n        <Grid item>\n          <Paper elevation={1} />\n          <Hint \n            currentHintedChar={this.props.currentJapChar} \n            autoplayAudio={this.state.checkedAudioAutoPlay}\n            ref={this.hintCardRef}\n          />\n        </Grid>\n      );\n    }\n  };\n\n  displayWordInfo = () => {\n    if (this.props.wordCompleted && this.props.version === 1) {\n      return (\n        <Grid item>\n          <WordCard\n            wordInfo={this.state.currentWordInfo}\n            word_audio_duration={this.state.word_audio_duration}\n            autoplayAudio={this.state.checkedAudioAutoPlay}\n            ref={this.wordCardRef}\n          />\n        </Grid>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  getKeyByValue = (object, value) => {\n    return Object.keys(object).find((key) => object[key] === value);\n  };\n\n  randomItem = (aList) => {\n    return aList[Math.floor(Math.random() * aList.length)];\n  };\n\n  displayMessage = () => {\n    const {\n      onIncorrectCard,\n      onHintedCard,\n      curWrongChar,\n      wordCompleted,\n      audioIsPlaying,\n      romajiNotInDict,\n      currentJapChar,\n      cardStateList,\n      indexCurrentCard,\n      wrongCharList,\n      romajiList,\n      currentWord,\n    } = this.props;\n    if (this.state.isFetchingCharResult\n        || !this.state.requestedWord\n        && !parseJapaneseWord(currentWord).length <= 0) {\n      return <CircularIndeterminate isOpen={true}/>\n    } else if (parseJapaneseWord(currentWord).length <= 0) {\n      return <LoadingPopup isOpen={true}/>\n    }\n    if (this.state.route === \"progress\") {\n      return `\n        You can click on each card to see how many times you've gotten a character correct (green) vs how many times you've used hint (yellow).\n      `;\n    }\n    if (this.state.route === \"katakanaChart\") {\n      return `\n        Hover over each card to see its pronunciation! Characters you've already seen are highlighted in color.\n      `;\n    }\n    if (this.state.walkThroughEnabled) {\n      return \"...\"\n    }\n    if (audioIsPlaying) {\n      return `Playing audio...`;\n    }\n    if (onIncorrectCard) {\n      return (romajiNotInDict \n        ? `${curWrongChar} does not exist in the Japanese alphabet. Delete your input and try again.`\n        : `${curWrongChar} corresponds to ${this.getKeyByValue(katakanaToRomaji, curWrongChar)}, not ${currentJapChar}. Delete your input and try again.`\n      );\n    } else if (onHintedCard) {\n      return \"Type the character. You can also click on the card for audio.\"\n    } else if (romajiList[indexCurrentCard] in wrongCharList) {\n      return \"Press spacebar if you're stuck.\"\n    } else if (indexCurrentCard > 0 \n      && indexCurrentCard < cardStateList.length\n      && cardStateList[indexCurrentCard - 1] === \"correct\") {\n        return listOfSoftPraises[0];\n    } else if (wordCompleted && !audioIsPlaying) {\n      const cardStateSet = new Set(cardStateList);\n      if (cardStateSet.size === 1 && cardStateSet.has(\"correct\")) {\n        return `${listOfPraises[0]} Press spacebar to continue.`;\n      } else {\n        return `Click on ${this.props.version === 1 ? 'a' : 'the'} character or press spacebar to continue.`;\n      }\n    } else {\n      // return `I will be giving you feedback as you use the app.`;\n      return `Press spacebar if you're stuck.`;\n    }\n  };\n  setButtonText = () => {\n    const {\n      onIncorrectCard,\n      onHintedCard,\n      wordCompleted,\n      audioIsPlaying,\n      currentJapChar,\n    } = this.props;\n\n    if (onIncorrectCard) {\n      return \"Try Again\";\n    } else if (onHintedCard && !audioIsPlaying) {\n      return \"Got it\";\n    } else if (wordCompleted && !audioIsPlaying) {\n      return \"Next Word\";\n    } else if (!onHintedCard && !wordCompleted) {\n      return `LEARN ${currentJapChar}`;\n    } else {\n      return \"\";\n    }\n  };\n  displayLoadingPopup = () => {\n    setTimeout(() => {\n      return this.state.isFetchingWord;\n    }, 1000);\n  } // not used\n\n  handleAudioAutoplaySwitch = (event) => {\n    this.setState(\n      { checkedAudioAutoPlay: !this.state.checkedAudioAutoPlay }\n    );\n  }\n  handleEnableMessageSwitch = () => {\n    this.setState(\n      { checkedEnableMessage: !this.state.checkedEnableMessage }\n    );\n  }\n\n  onExitIntroduction = () => {\n    this.setState({ firstIntroductionEnabled: false });\n  }\n\n  endWalkThrough = () => {\n    this.clearFormInput(this.charInputRef.current.formRef.current);\n    this.setState({ walkThroughEnabled: false });\n    this.props.resetStore();\n    this.requestAndUpdateWord();\n  }\n\n  firstTimeCompleteWordSinceWalkThrough = () => {\n    this.setState({ firstTimeCompleteWordSinceWalkThru : true })\n  }\n  \n  renderRoute = (route) => {\n    switch (route) {\n      case \"progress\":\n        return (\n          <div className=\"progress-flex-container\">\n            <div className=\"progress-flex-item1\">\n              <NavBar\n                onRouteChange={this.onRouteChange}\n                currentTab=\"progress\"\n              />\n            </div>\n            <div>\n              <MessageBar \n                className={`message-box`}\n                userName={\"friend.\"}\n                message={this.displayMessage()}\n                displayHelpMessages={true}\n              />\n            </div>\n            <div className=\"progress-flex-item2\">\n              <SmallCharList \n                requestGetCharScore={this.requestGetCharScore}\n                charResultList={this.state.charResultList}\n              />\n            </div>\n            <Footer />\n          </div>\n        );\n      case \"katakanaChart\":\n        return (\n          <div className=\"progress-flex-container\">\n            <div className=\"progress-flex-item1\">\n              <NavBar\n                onRouteChange={this.onRouteChange}\n                currentTab=\"katakanaChart\"\n              />\n            </div>\n            <div>\n              <MessageBar \n                className={`message-box`}\n                userName={\"friend.\"}\n                message={this.displayMessage()}\n                displayHelpMessages={true}  \n              />\n            </div>\n            <div className=\"progress-flex-item2\">\n              <KatakanaChart \n                requestGetCharScore={this.requestGetCharScore}\n                charResultList={this.state.charResultList}\n              />\n            </div>\n            <Footer />\n          </div>\n        )\n      case \"signin\":\n        return (\n          <Signin onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n        );\n      case \"register\":\n        return (\n          <Register\n            onRouteChange={this.onRouteChange}\n            loadUser={this.loadUser}\n          />\n        );\n      case \"home\":\n        const { currentWord } = this.props;\n        const { initialStep } = this.state;\n        const generalStepsOptions = {\n          showStepNumbers: false,\n          hidePrev: true,\n          hideNext: true,\n          exitOnOverlayClick: false,\n          exitOnEsc: false,\n          showButtons: true,\n          overlayOpacity: 0.5,\n          skipLabel: \"Skip\",\n          doneLabel: \"Start Learning\",\n        };\n        return (\n          <div className=\"page-container\" style={{ position: \"relative\" }}>\n            <LoadingPopup isOpen={this.displayLoadingPopup()}/>\n            <Steps\n              enabled={this.state.firstIntroductionEnabled}\n              steps={this.state.introductory_steps}\n              initialStep={initialStep}\n              onExit={this.onExitIntroduction}\n              options={generalStepsOptions}\n              ref={steps => (this.introductory_steps = steps)}\n            >\n            </Steps>\n            <Dialog\n              open={this.state.openEndDialogue}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">\n                {\"Time's Up!\"}\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                  <p>\n                    {`You have used the app for ${USER_TIME_LIMIT_IN_MINUTES} minutes. Please click the link\n                    below to take a short test that will assess your Katakana\n                    knowledge. Thank you so much for using the app!`}\n                  </p>\n                  <a\n                    href=\"https://harvard.az1.qualtrics.com/jfe/form/SV_2aZI7SwLfhp5nxj\"\n                    className=\"survey-link\"\n                  >\n                    {\"https://harvard.az1.qualtrics.com/jfe/form/SV_2aZI7SwLfhp5nxj\"}\n                  </a>\n                </DialogContentText>\n              </DialogContent>\n            </Dialog>\n            <div className=\"content-wrap\">\n              <NavBar \n                onRouteChange={this.onRouteChange} \n                currentTab=\"home\"\n              />\n              <div className=\"message-bar\">\n                <MessageBar \n                  userName={this.state.userInfo.name}\n                  message={this.displayMessage()}\n                  displayHelpMessages={this.state.checkedEnableMessage}\n                />\n              </div>\n              <FormControlLabel\n                className=\"audio-control switch-control\"\n                label=\"Autoplay Audio\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch \n                    // disabled\n                    checked={this.state.checkedAudioAutoPlay}\n                    onChange={this.handleAudioAutoplaySwitch}\n                    name=\"autoplay-audio\" \n                    color=\"primary\"\n                  />\n                }\n              >\n              </FormControlLabel>\n              <FormControlLabel\n                className=\"message-control switch-control\"\n                label=\"Help Message\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch \n                    checked={this.state.checkedEnableMessage}\n                    onChange={this.handleEnableMessageSwitch}\n                    name=\"enable-message\" \n                    color=\"primary\"\n                  />\n                }\n              >\n              </FormControlLabel>\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <div className=\"main-area\">\n                  <div className=\"inputbox-and-word\"\n                  >\n                    <Grid item className=\"inputbox-div\">\n                      <OutsideAlerter focusInputBox={this.focusInputBox}>\n                        <CharInput\n                          getKeyByValue={this.getKeyByValue}\n                          user_uid={this.state.userInfo.id}\n                          ref={this.charInputRef}\n                          setClick={(click) => (this.clickChild = click)}\n                          matchClearFormInputFunction={(childFunc) => (this.clearFormInput = childFunc)}\n                          disableAllAction={this.state.disableAllAction}\n                          endWalkThrough={this.endWalkThrough}\n                          walkThroughEnabled={this.state.walkThroughEnabled}\n                          moveToNextWord = {this.moveToNextWord}\n                          requestedWord = {this.state.requestedWord}\n                          firstTimeCompleteWordSinceWalkThrough = \n                          {this.firstTimeCompleteWordSinceWalkThrough}\n                          requestModuleInfo={this.requestModuleInfo}\n                          updateScoreThenGetModule={this.updateScoreThenGetModule}\n                          thisApp={this}\n                        />\n                      </OutsideAlerter>\n                    </Grid>\n                    <Grid item className=\"japanese-word-area\">\n                      <CharList\n                        charsToRead={parseJapaneseWord(currentWord)}\n                        onClickCard={this.onClickCard}\n                        clickedJapChar={this.state.clickedJapChar}\n                      />\n                    </Grid>\n\n                    {this.state.requestedWord ? (\n                      <div>\n                        <div className=\"module-level\">\n                          {`Level ${this.state.moduleInfo ? this.state.moduleInfo.moduleIndex : 0}`}\n                        </div>\n                        <Grid item>\n                          <Box\n                            className=\"progress-bar\"\n                          >\n                            <LinearDeterminate \n                              moduleInfo={this.state.moduleInfo} \n                            />\n                          </Box>\n                        </Grid>\n                      </div>\n                    ) : (\n                      null\n                    )}\n\n\n                  </div>\n                  <Grid item className=\"card-area\">\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={2}\n                    >                      \n                      {this.showHint()}\n                      {this.displayWordInfo()}\n                    </Grid>                  \n                  </Grid>\n                </div>\n              </Grid>\n            </div>\n            <Footer />\n          </div>\n        );\n      default:\n        return <div>Default</div>;\n    }\n  };\n\n  render() {\n    return <div className=\"tc\">{this.renderRoute(this.state.route)}</div>;\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { USER_INPUT } from \"./constants\";\r\n// import update from \"react-addons-update\";\r\n\r\nconst initialInputBox = {\r\n  inputBox: \"\",\r\n  keyPressed: \"\",\r\n  romajiNotInDict: false,\r\n};\r\n\r\nconst initialGeneralState = {\r\n  audioIsPlaying: false,\r\n  userInfo: null,\r\n};\r\n\r\nconst initialCardState = {\r\n  currentJapChar: \"\",\r\n  currentRomaji: \"\",\r\n  currentWord: \"\",\r\n  curWrongChar: \"\",\r\n  hintedCharList: [],\r\n  wrongCharList: {},\r\n  onIncorrectCard: false,\r\n  onHintedCard: false,\r\n  wordCompleted: false,\r\n  prevTimestamp: null,\r\n  charTimestamp: [],\r\n  allCharTimestamp: [],\r\n  romajiList: [],\r\n  indexCurrentCard: 0,\r\n  cardStateList: [],\r\n};\r\n\r\nexport const changeGeneralState = (\r\n  state = initialGeneralState,\r\n  action = {}\r\n) => {\r\n  switch (action.type) {\r\n    case \"PLAY_AUDIO\":\r\n      return { ...state, audioIsPlaying: true };\r\n    case \"PAUSE_AUDIO\":\r\n      return { ...state, audioIsPlaying: false };\r\n    case \"LOAD_USER\":\r\n      return { ...state, userInfo: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const changeInputBox = (state = initialInputBox, action = {}) => {\r\n  switch (action.type) {\r\n    case USER_INPUT:\r\n      return { ...state, inputBox: action.payload };\r\n    case \"PRESS_KEY\":\r\n      return { ...state, keyPressed: action.payload };\r\n    case \"RESET_STORE\":\r\n      return { ...state, inputBox: \"\", keyPressed: \"\" };\r\n    case \"ALERT_NOT_IN_DICT\":\r\n      return { ...state, romajiNotInDict: true };\r\n    case \"RESET_NOT_IN_DICT_ALERT\":\r\n      return { ...state, romajiNotInDict: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const changeCardState = (state = initialCardState, action = {}) => {\r\n  switch (action.type) {\r\n    case \"CHAR_UPDATE\":\r\n      return {\r\n        ...state,\r\n        currentJapChar: action.currentJapChar,\r\n        currentRomaji: action.currentRomaji,\r\n      };\r\n    case \"ENTER_PRESS\":\r\n      state.cardStateList[state.indexCurrentCard] = \"hinted\";\r\n      return {\r\n        ...state,\r\n        hintedCharList: [...state.hintedCharList, state.currentRomaji],\r\n        onHintedCard: false,\r\n        prevTimestamp: action.time,\r\n        indexCurrentCard: state.indexCurrentCard + 1,\r\n      };\r\n    case \"WRONG_INPUT\":\r\n      state.wrongCharList[action.currentChar] = action.userInput;\r\n      state.cardStateList[state.indexCurrentCard] = \"incorrect\";\r\n      return {\r\n        ...state,\r\n        onIncorrectCard: true,\r\n        curWrongChar: action.userInput,\r\n      };\r\n    case \"SPACE_PRESS_TO_CONTINUE\":\r\n      state.cardStateList[state.indexCurrentCard] = \"\";\r\n      return { ...state, onIncorrectCard: false };\r\n    case \"SPACE_PRESS_FOR_HINT\":\r\n      return { ...state, onHintedCard: true };\r\n    case \"SPACE_PRESS_TO_GO_NEXT\":\r\n      return {\r\n        ...state,\r\n        wordCompleted: false,\r\n        charTimestamp: [],\r\n        allCharTimestamp: [...state.allCharTimestamp, state.charTimestamp],\r\n        // prevTimestamp: action.time,\r\n        hintedCharList: [],\r\n      };\r\n    case \"COMPLETE_WORD\":\r\n      return { ...state, wordCompleted: true };\r\n    case \"UPDATE_WORD\":\r\n      return {\r\n        ...state,\r\n        currentWord: action.payload,\r\n        romajiList: action.romajiList,\r\n        cardStateList: action.cardStateList,\r\n        indexCurrentCard: 0,\r\n      };\r\n    case \"COMPLETE_CHAR\":\r\n      const newTimestamp = {\r\n        char: state.currentJapChar,\r\n        time: action.time - state.prevTimestamp,\r\n        type: action.completionType,\r\n      };\r\n      console.log(\"TIME STAMP\", newTimestamp);\r\n      return {\r\n        ...state,\r\n        charTimestamp: [...state.charTimestamp, newTimestamp],\r\n        prevTimestamp: action.time,\r\n      };\r\n    case \"SET_NEW_WORD_TIME\":\r\n      return { ...state, prevTimestamp: action.time };\r\n    case \"INPUT_CORRECT_CHAR\":\r\n      // state.cardStateList[state.indexCurrentCard] = \"correct\";\r\n      return {\r\n        ...state,\r\n        indexCurrentCard: state.indexCurrentCard + 1,\r\n        cardStateList: state.cardStateList.map((item, idx) =>\r\n          idx === state.indexCurrentCard ? \"correct\" : item\r\n        ),\r\n      };\r\n    case \"INPUT_INCORRECT_CHAR\":\r\n      // state.cardStateList[state.indexCurrentCard] = \"incorrect\";\r\n      return {\r\n        ...state,\r\n        cardStateList: state.cardStateList.map((item, idx) =>\r\n          idx === state.indexCurrentCard ? \"incorrect\" : item\r\n        ),\r\n      };\r\n    case \"RESET_STORE\":\r\n      return {\r\n        ...state,\r\n        allCharTimestamp: [],\r\n        charTimestamp: [],\r\n        curWrongChar: null,\r\n        onHintedCard: false,\r\n        onIncorrectCard: false,\r\n        wordCompleted: false,\r\n        wrongCharList: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport \"./scss/index.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./containers/App.js\"; // word-based version\nimport {\n  changeGeneralState,\n  changeInputBox,\n  changeCardState,\n} from \"./reducers\";\nimport { PRIMARYCOLOR, VERSION } from \"./constants.js\"\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport \"typeface-roboto\";\nimport LogRocket from \"logrocket\";\n\nLogRocket.init(\"zskhtw/japanese-learning\");\n\nconst theme = createMuiTheme({\n  palette: {\n    // type: \"dark\",\n    primary: {\n      main: PRIMARYCOLOR,\n    },\n    secondary: {\n      main: \"#ffffff\",\n    },\n  },\n  overrides: {\n    MuiButton: {\n      iconSizeMedium: {\n        \"& > *:first-child\": {\n          fontSize: 22 // change global icon size\n        }\n      }\n    }\n  }\n});\n\nconst rootReducer = combineReducers({\n  changeGeneralState,\n  changeInputBox,\n  changeCardState,\n});\n\nconst logger = createLogger();\n\n// const store = createStore(rootReducer, applyMiddleware(logger));\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(logger, LogRocket.reduxMiddleware())\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App version={VERSION} />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}